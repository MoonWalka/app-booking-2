{
  "date": "2025-06-06T20:06:45.246Z",
  "summary": {
    "totalFiles": 76,
    "filesWithIssues": 36,
    "totalIssues": 79,
    "collections": [
      "artistes",
      "concerts",
      "contacts",
      "contratTemplates",
      "contrats",
      "formLinks",
      "formSubmissions",
      "lieux",
      "organization_invitations",
      "organizations",
      "relances",
      "structures"
    ]
  },
  "details": [
    {
      "file": "src/components/artistes/desktop/ArtisteForm.js",
      "fileName": "ArtisteForm.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/artistes/handlers/paginationHandler.js",
      "fileName": "paginationHandler.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/artistes/mobile/ArtisteView.js",
      "fileName": "ArtisteView.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/artistes/mobile/handlers/paginationHandler.js",
      "fileName": "paginationHandler.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/artistes/utils/concertUtils.js",
      "fileName": "concertUtils.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/common/EnvironmentBanner.js",
      "fileName": "EnvironmentBanner.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/concerts/mobile/handlers/deleteHandler.js",
      "fileName": "deleteHandler.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/contacts/desktop/ContactForm.js",
      "fileName": "ContactForm.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/components/contacts/desktop/ContactFormMaquette.js",
      "fileName": "ContactFormMaquette.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "Queries sans filtre organizationId détectées",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/contacts/desktop/ContactLieuxSection.js",
      "fileName": "ContactLieuxSection.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/contacts/desktop/sections/ContactConcertsSectionV2.js",
      "fileName": "ContactConcertsSectionV2.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/contacts/mobile/ContactForm.js",
      "fileName": "ContactForm.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/debug/LieuxMapDebug.js",
      "fileName": "LieuxMapDebug.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/debug/StructureVariableTest.js",
      "fileName": "StructureVariableTest.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/debug/StructuresAuditDebug.js",
      "fileName": "StructuresAuditDebug.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/forms/FormGenerator.js",
      "fileName": "FormGenerator.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/components/forms/FormSubmissionViewer.js",
      "fileName": "FormSubmissionViewer.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/forms/PublicContactForm.js",
      "fileName": "PublicContactForm.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/lieux/desktop/sections/LieuConcertsSection.js",
      "fileName": "LieuConcertsSection.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/lieux/desktop/sections/LieuOrganizerSection.js",
      "fileName": "LieuOrganizerSection.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/molecules/handlers/paginationHandler.js",
      "fileName": "paginationHandler.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/parametres/ParametresCompte.js",
      "fileName": "ParametresCompte.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/parametres/ParametresExport.js",
      "fileName": "ParametresExport.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/parametres/sync/SyncManager.js",
      "fileName": "SyncManager.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/structures/core/useStructureDetails.js",
      "fileName": "useStructureDetails.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/components/structures/desktop/StructureForm.js",
      "fileName": "StructureForm.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "Queries sans filtre organizationId détectées",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/structures/desktop/StructuresList.js",
      "fileName": "StructuresList.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/components/ui/EntitySelector.js",
      "fileName": "EntitySelector.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/components/ui/ListWithFilters.js",
      "fileName": "ListWithFilters.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées"
      ]
    },
    {
      "file": "src/context/AuthContext.js",
      "fileName": "AuthContext.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/context/ParametresContext.js",
      "fileName": "ParametresContext.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/hooks/artistes/useArtistesList.js",
      "fileName": "useArtistesList.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/common/useFirestoreSubscription.js",
      "fileName": "useFirestoreSubscription.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/hooks/common/useFormSubmission.js",
      "fileName": "useFormSubmission.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/hooks/common/useGenericEntityDetails.js",
      "fileName": "useGenericEntityDetails.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/common/useGenericEntitySearch.js",
      "fileName": "useGenericEntitySearch.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/common/useSafeRelations.js",
      "fileName": "useSafeRelations.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/hooks/concerts/useConcertAssociations.js",
      "fileName": "useConcertAssociations.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/hooks/concerts/useConcertDetails.js",
      "fileName": "useConcertDetails.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/hooks/concerts/useConcertFormWithRelations.js",
      "fileName": "useConcertFormWithRelations.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/hooks/concerts/useConcertWatcher.js",
      "fileName": "useConcertWatcher.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/contacts/useConcertSearch.js",
      "fileName": "useConcertSearch.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/hooks/contacts/useContactSearch.js",
      "fileName": "useContactSearch.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/contrats/useContratActions.js",
      "fileName": "useContratActions.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/contrats/useContratGenerator.js",
      "fileName": "useContratGenerator.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "Queries sans filtre organizationId détectées",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/hooks/forms/useFormTokenValidation.js",
      "fileName": "useFormTokenValidation.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/hooks/forms/useFormValidationData.js",
      "fileName": "useFormValidationData.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/hooks/forms/useValidationBatchActions.js",
      "fileName": "useValidationBatchActions.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "CREATE operation sans organizationId trouvée",
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/hooks/generics/actions/useGenericAction.js",
      "fileName": "useGenericAction.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/hooks/generics/data/useGenericDataFetcher.js",
      "fileName": "useGenericDataFetcher.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/lieux/useLieuxQuery.js",
      "fileName": "useLieuxQuery.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/hooks/structures/index.js",
      "fileName": "index.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/hooks/useMultiOrgQuery.js",
      "fileName": "useMultiOrgQuery.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": true,
      "usesOrganizationContext": true,
      "issues": []
    },
    {
      "file": "src/pages/ContratGenerationPage.js",
      "fileName": "ContratGenerationPage.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/pages/ContratsPage.js",
      "fileName": "ContratsPage.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "Queries sans filtre organizationId détectées",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/pages/FormResponsePage.js",
      "fileName": "FormResponsePage.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/pages/LoginPage.js",
      "fileName": "LoginPage.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/pages/contratTemplatesEditPage.js",
      "fileName": "contratTemplatesEditPage.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/services/bidirectionalRelationsService.js",
      "fileName": "bidirectionalRelationsService.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/services/firebase-service.js",
      "fileName": "firebase-service.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": true,
      "usesOrganizationContext": true,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "CREATE operation sans organizationId trouvée",
        "CREATE operation sans organizationId trouvée",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/services/firestoreService.js",
      "fileName": "firestoreService.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "Queries sans filtre organizationId détectées",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/services/relancesAutomatiquesService.js",
      "fileName": "relancesAutomatiquesService.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/services/syncService.js",
      "fileName": "syncService.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/shims/firebase-firestore-shim.js",
      "fileName": "firebase-firestore-shim.js",
      "operations": {
        "create": [],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/utils/addCoordinatesToLieux.js",
      "fileName": "addCoordinatesToLieux.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/utils/cleanupRelancesDoublons.js",
      "fileName": "cleanupRelancesDoublons.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": [
          {
            "type": "deleteDoc"
          }
        ]
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/utils/createDefaultContractTemplate.js",
      "fileName": "createDefaultContractTemplate.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": false
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "Queries sans filtre organizationId détectées",
        "❌ CREATE sans organizationId",
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/utils/dataCompatibilityHelper.js",
      "fileName": "dataCompatibilityHelper.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "CREATE operation sans organizationId trouvée",
        "❌ CREATE sans organizationId"
      ]
    },
    {
      "file": "src/utils/debugRelancesAutomatiques.js",
      "fileName": "debugRelancesAutomatiques.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/utils/diagnosticRelancesStatus.js",
      "fileName": "diagnosticRelancesStatus.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/utils/fixConcertDates.js",
      "fileName": "fixConcertDates.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/utils/fixRelancesAutomatiques.js",
      "fileName": "fixRelancesAutomatiques.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/utils/seedConcerts.js",
      "fileName": "seedConcerts.js",
      "operations": {
        "create": [
          {
            "type": "addDoc/setDoc",
            "hasOrganizationId": true
          }
        ],
        "read": [],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": true,
      "usesOrganizationContext": false,
      "issues": []
    },
    {
      "file": "src/utils/templateDiagnostic.js",
      "fileName": "templateDiagnostic.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/utils/testMapFix.js",
      "fileName": "testMapFix.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": false,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": [
        "❌ READ sans filtre organizationId"
      ]
    },
    {
      "file": "src/utils/updateRelancesEntity.js",
      "fileName": "updateRelancesEntity.js",
      "operations": {
        "create": [],
        "read": [
          {
            "type": "query/getDocs/getDoc"
          }
        ],
        "update": [
          {
            "type": "updateDoc"
          }
        ],
        "delete": []
      },
      "collections": {},
      "hasOrganizationIdCheck": true,
      "hasOrganizationIdInWrites": false,
      "usesOrganizationContext": false,
      "issues": []
    }
  ],
  "recommendations": [
    "Toujours inclure organizationId dans les opérations CREATE",
    "Filtrer par organizationId dans les opérations READ",
    "Utiliser les hooks génériques qui gèrent automatiquement organizationId",
    "Vérifier les permissions avant les opérations DELETE"
  ]
}