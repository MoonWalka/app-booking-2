#!/usr/bin/env node

/**
 * Test de la Palette Harmonieuse TourCraft
 * V√©rifie que toutes les couleurs harmonis√©es sont bien d√©finies
 * Cr√©√© le 31 Mai 2025
 */

const fs = require('fs');
const path = require('path');

const colorsPath = path.join(__dirname, '../src/styles/base/colors.css');

console.log('üé® Test de la Palette Harmonieuse TourCraft');
console.log('===========================================\n');

// Lire le fichier colors.css
let cssContent = '';
try {
    cssContent = fs.readFileSync(colorsPath, 'utf8');
    console.log('‚úÖ Fichier colors.css lu avec succ√®s');
} catch (error) {
    console.error('‚ùå Erreur lors de la lecture du fichier colors.css:', error.message);
    process.exit(1);
}

// V√©rifications des couleurs harmonis√©es
const tests = [
    {
        name: 'Couleur principale #213547',
        check: () => cssContent.includes('--tc-color-primary: #213547'),
        description: 'Couleur de r√©f√©rence pr√©sente'
    },
    {
        name: 'Palette principale HSL',
        check: () => cssContent.includes('hsl(202, 36%') && cssContent.includes('--tc-color-primary-50:'),
        description: 'Nuances principales en HSL harmonis√©'
    },
    {
        name: 'Success harmonis√©',
        check: () => cssContent.includes('hsl(142, 36%'),
        description: 'Couleur success avec saturation harmonis√©e (36%)'
    },
    {
        name: 'Warning harmonis√©',
        check: () => cssContent.includes('hsl(35, 36%'),
        description: 'Couleur warning avec saturation harmonis√©e (36%)'
    },
    {
        name: 'Error harmonis√©',
        check: () => cssContent.includes('hsl(0, 36%'),
        description: 'Couleur error avec saturation harmonis√©e (36%)'
    },
    {
        name: 'Info harmonis√©',
        check: () => cssContent.includes('hsl(202, 45%'),
        description: 'Couleur info avec teinte harmonis√©e (202¬∞)'
    },
    {
        name: 'Gris teint√©s',
        check: () => cssContent.includes('hsl(202, 8%') && cssContent.includes('--tc-color-gray-'),
        description: 'Gris teint√©s avec la couleur principale'
    },
    {
        name: 'Couleurs m√©tier harmonis√©es',
        check: () => cssContent.includes('hsl(262, 36%') && cssContent.includes('hsl(222, 36%') && cssContent.includes('hsl(282, 36%'),
        description: 'Artistes, concerts, programmateurs harmonis√©s'
    },
    {
        name: 'Mode sombre',
        check: () => cssContent.includes('[data-theme="dark"]'),
        description: 'Support du mode sombre inclus'
    },
    {
        name: 'Variables WCAG',
        check: () => cssContent.includes('--tc-success-text-contrast') && cssContent.includes('--tc-error-text-contrast'),
        description: 'Variables de contraste WCAG pr√©sentes'
    }
];

// Ex√©cuter les tests
let passedTests = 0;
let totalTests = tests.length;

console.log('üîç Ex√©cution des tests...\n');

tests.forEach((test, index) => {
    const passed = test.check();
    const status = passed ? '‚úÖ' : '‚ùå';
    console.log(`${status} Test ${index + 1}: ${test.name}`);
    console.log(`   ${test.description}`);
    
    if (passed) {
        passedTests++;
    } else {
        console.log('   ‚ö†Ô∏è  Test √©chou√©');
    }
    console.log();
});

// R√©sultats finaux
console.log('üìä R√âSULTATS FINAUX');
console.log('==================');
console.log(`Tests r√©ussis: ${passedTests}/${totalTests}`);
console.log(`Taux de r√©ussite: ${Math.round((passedTests / totalTests) * 100)}%`);

if (passedTests === totalTests) {
    console.log('\nüéâ SUCC√àS ! La palette harmonieuse est correctement appliqu√©e !');
    console.log('\nüìã PROCHAINES √âTAPES:');
    console.log('1. Red√©marrer le serveur de d√©veloppement');
    console.log('2. V√©rifier l\'apparence de l\'application');
    console.log('3. Tester le mode sombre si disponible');
    console.log('4. Valider l\'harmonie visuelle des couleurs');
} else {
    console.log('\n‚ö†Ô∏è  ATTENTION ! Certains tests ont √©chou√©.');
    console.log('V√©rifiez que le fichier colors-harmonized.css a √©t√© correctement appliqu√©.');
}

// Informations suppl√©mentaires
console.log('\nüîß COMMANDES UTILES:');
console.log('‚Ä¢ Revenir en arri√®re: cp src/styles/base/colors-original-backup-*.css src/styles/base/colors.css');
console.log('‚Ä¢ R√©appliquer: ./scripts/apply-harmonized-colors.sh');
console.log('‚Ä¢ Documentation: docs/PALETTE_HARMONIEUSE_TOURCRAFT.md');

// Analyse des couleurs extraites
console.log('\nüé® APER√áU DES COULEURS HARMONIS√âES:');
const colorMatches = cssContent.match(/hsl\(\d+,\s*\d+%,\s*\d+%\)/g);
if (colorMatches) {
    const uniqueColors = [...new Set(colorMatches)].slice(0, 8); // Limiter √† 8 exemples
    uniqueColors.forEach(color => {
        console.log(`   ${color}`);
    });
} else {
    console.log('   Aucune couleur HSL d√©tect√©e');
}

process.exit(passedTests === totalTests ? 0 : 1);