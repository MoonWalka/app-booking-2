AUDIT MIGRATION PROGRAMMATEUR → CONTACT
Date: Sat Jun  7 03:09:43 CEST 2025
=======================================

FICHIERS AVEC OCCURRENCES:
=========================
  37 src//hooks/contrats/useContratGenerator.js
  29 src//components/pdf/ContratPDFWrapper.js
  26 src//hooks/contrats/contractVariables.js
  13 src//hooks/concerts/useConcertFormFixed.js
  12 src//components/forms/FormSubmissionViewer.js
  12 src//components/contrats/sections/ContratInfoCard.js
  11 src//components/lieux/mobile/LieuView.js
  11 src//components/contrats/ContratTemplateEditorSimple.js
   9 src//components/contrats/desktop/hooks/useTemplateVariables.js
   6 src//pages/ContratDetailsPage.js
   6 src//components/forms/validation/FormValidationInterfaceNew.js
   6 src//components/forms/validation/FormValidationInterface.js
   5 src//components/forms/mobile/FormValidationInterface.js
   5 src//components/forms/PublicContactForm.js
   4 src//components/contrats/desktop/hooks/useContratTemplatePreview.js
   4 src//components/contrats/desktop/ContratGenerator.js
   3 src//components/lieux/desktop/LieuForm.js
   3 src//components/contrats/sections/ContratsTable.js
   3 src//components/contrats/desktop/sections/ContratDebugPanel.js
   2 src//services/relancesAutomatiquesService.js
   2 src//pages/FormResponsePage.js
   2 src//components/lieux/desktop/sections/LieuStructuresSection.js
   2 src//components/contrats/desktop/sections/UserGuide.js
   2 src//components/contrats/desktop/sections/ContratGenerationActions.js
   1 src//pages/contratTemplatesPage.js
   1 src//pages/ContratGenerationPage.js
   1 src//hooks/concerts/useConcertListSimplified.js
   1 src//hooks/concerts/useConcertFilters.js
   1 src//components/forms/validation/ValidationSummary.js
   1 src//components/forms/public/PublicFormContainer.js
   1 src//components/forms/public/AdminFormValidation.js
   1 src//components/debug/StructureVariableTest.js
   1 src//components/contrats/sections/ContratPdfViewer.js
   1 src//components/contrats/desktop/hooks/useTemplateEditor.js
   1 src//components/artistes/mobile/ArtisteView.js

DÉTAIL DES OCCURRENCES PAR FICHIER:
==================================
src//components/forms/public/AdminFormValidation.js:        <p>Cette interface vous permet de valider les informations soumises par le programmateur.</p>
src//components/forms/public/PublicFormContainer.js:        title="Formulaire programmateur" 
src//components/forms/mobile/FormValidationInterface.js:    programmateur,
src//components/forms/mobile/FormValidationInterface.js:        existingData={programmateur}
src//components/forms/mobile/FormValidationInterface.js:        formData={formData.programmateurData || formData.data}
src//components/forms/mobile/FormValidationInterface.js:        existingData={programmateur}
src//components/forms/mobile/FormValidationInterface.js:        formData={formData.programmateurData || formData.data}
src//components/forms/FormSubmissionViewer.js:          submission.programmateurData?.contact && (
src//components/forms/FormSubmissionViewer.js:                  <dd>{submission.programmateurData.contact.nom || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                  <dd>{submission.programmateurData.contact.prenom || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                  <dd>{submission.programmateurData.contact.email || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                  <dd>{submission.programmateurData.contact.telephone || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                  <dd>{submission.programmateurData.contact.fonction || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                {submission.programmateurData?.structure && (
src//components/forms/FormSubmissionViewer.js:                    <dd>{submission.programmateurData.structure.raisonSociale || submission.programmateurData.structure.nom || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                    <dd>{submission.programmateurData.structure.siret || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                    <dd>{submission.programmateurData.structure.type || 'N/A'}</dd>
src//components/forms/FormSubmissionViewer.js:                      {submission.programmateurData.structure.adresse || ''}<br />
src//components/forms/FormSubmissionViewer.js:                      {submission.programmateurData.structure.codePostal} {submission.programmateurData.structure.ville}
src//components/forms/validation/ValidationSummary.js:          Les informations validées ont été intégrées à la fiche du programmateur et du lieu.
src//components/forms/validation/FormValidationInterface.js:    contact: programmateur,  // Alias pour compatibilité
src//components/forms/validation/FormValidationInterface.js:        existingData={programmateur}
src//components/forms/validation/FormValidationInterface.js:        formData={formData.signataireData || formData.programmateurData || formData.data}
src//components/forms/validation/FormValidationInterface.js:        existingData={programmateur}
src//components/forms/validation/FormValidationInterface.js:        formData={formData.structureData || formData.programmateurData || formData.data}
src//components/forms/validation/FormValidationInterface.js:        message="Êtes-vous sûr de vouloir valider ce formulaire ? Les données validées seront enregistrées dans la fiche du concert, du lieu et du programmateur."
src//components/forms/validation/FormValidationInterfaceNew.js:    programmateur,
src//components/forms/validation/FormValidationInterfaceNew.js:        existingData={programmateur}
src//components/forms/validation/FormValidationInterfaceNew.js:        formData={formData.programmateurData || formData.data}
src//components/forms/validation/FormValidationInterfaceNew.js:        existingData={programmateur}
src//components/forms/validation/FormValidationInterfaceNew.js:        formData={formData.programmateurData || formData.data}
src//components/forms/validation/FormValidationInterfaceNew.js:        message="Êtes-vous sûr de vouloir valider ce formulaire ? Les données validées seront enregistrées dans la fiche du concert, du lieu et du programmateur."
src//components/forms/PublicContactForm.js:  programmateurEmail // Email du programmateur passé si disponible
src//components/forms/PublicContactForm.js:    signataireEmail: programmateurEmail || '', // Prérempli si disponible
src//components/forms/PublicContactForm.js:          if (formLinkData.programmateurEmail) {
src//components/forms/PublicContactForm.js:              signataireEmail: prev.signataireEmail || formLinkData.programmateurEmail
src//components/forms/PublicContactForm.js:                  signataireEmail: submissionData.signataireData?.email || formLinkData.programmateurEmail || '',
src//components/pdf/ContratPDFWrapper.js:    programmateur,  // Rétrocompatibilité
src//components/pdf/ContratPDFWrapper.js:    programmateurData,  // Rétrocompatibilité
src//components/pdf/ContratPDFWrapper.js:    programmateur: programmateur || programmateurData || {},  // Rétrocompatibilité
src//components/pdf/ContratPDFWrapper.js:    'contact_nom': safeData.contact?.nom || safeData.programmateur?.nom || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'contact_prenom': safeData.contact?.prenom || safeData.programmateur?.prenom || '',
src//components/pdf/ContratPDFWrapper.js:    'contact_structure': safeData.contact?.structure || safeData.programmateur?.structure || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'contact_email': safeData.contact?.email || safeData.programmateur?.email || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'contact_telephone': safeData.contact?.telephone || safeData.programmateur?.telephone || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'contact_adresse': safeData.contact?.adresse || safeData.programmateur?.adresse || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'contact_siret': safeData.contact?.siret || safeData.programmateur?.siret || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'contact_numero_intracommunautaire': safeData.contact?.numeroIntracommunautaire || safeData.programmateur?.numeroIntracommunautaire || safeData.programmateur?.numero_intracommunautaire || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'contact_representant': safeData.contact?.representant || safeData.programmateur?.representant || safeData.contact?.nom || safeData.programmateur?.nom || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'contact_qualite_representant': safeData.contact?.qualiteRepresentant || safeData.programmateur?.qualiteRepresentant || safeData.programmateur?.qualite_representant || safeData.contact?.fonction || safeData.programmateur?.fonction || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_nom': safeData.contact?.nom || safeData.programmateur?.nom || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_prenom': safeData.contact?.prenom || safeData.programmateur?.prenom || '',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_structure': safeData.contact?.structure || safeData.programmateur?.structure || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_email': safeData.contact?.email || safeData.programmateur?.email || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_telephone': safeData.contact?.telephone || safeData.programmateur?.telephone || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_adresse': safeData.contact?.adresse || safeData.programmateur?.adresse || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_siret': safeData.contact?.siret || safeData.programmateur?.siret || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_numero_intracommunautaire': safeData.contact?.numeroIntracommunautaire || safeData.programmateur?.numeroIntracommunautaire || safeData.programmateur?.numero_intracommunautaire || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_representant': safeData.contact?.representant || safeData.programmateur?.representant || safeData.contact?.nom || safeData.programmateur?.nom || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:    'programmateur_qualite_representant': safeData.contact?.qualiteRepresentant || safeData.programmateur?.qualiteRepresentant || safeData.programmateur?.qualite_representant || safeData.contact?.fonction || safeData.programmateur?.fonction || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'structure_nom': safeData.structure?.nom || safeData.structure?.raisonSociale || safeData.programmateur?.structure || 'Non spécifiée',
src//components/pdf/ContratPDFWrapper.js:    'structure_siret': safeData.structure?.siret || safeData.programmateur?.siret || 'Non spécifié',
src//components/pdf/ContratPDFWrapper.js:      return safeData.structure?.adresse || safeData.programmateur?.adresse || 'Non spécifiée';
src//components/pdf/ContratPDFWrapper.js:  programmateurData, 
src//components/pdf/ContratPDFWrapper.js:    programmateur: programmateurData || {},
src//components/pdf/ContratPDFWrapper.js:            Programmateur: {safeData.programmateur.structure || 'Non spécifié'}
src//components/lieux/desktop/sections/LieuStructuresSection.js:                            {structure.programmateur && (
src//components/lieux/desktop/sections/LieuStructuresSection.js:                                Programmateur: {structure.programmateur}
src//components/lieux/desktop/LieuForm.js:    programmateurSearch,
src//components/lieux/desktop/LieuForm.js:                programmateur={programmateurSearch?.selectedEntity}
src//components/lieux/desktop/LieuForm.js:                onProgrammateurChange={programmateurSearch?.setSelectedEntity}
src//components/lieux/mobile/LieuView.js:  const programmateur = relatedData?.programmateur;
src//components/lieux/mobile/LieuView.js:  const loadingProgrammateur = loadingRelated?.programmateur;
src//components/lieux/mobile/LieuView.js:        ) : programmateur ? (
src//components/lieux/mobile/LieuView.js:            <div className="mb-2">{programmateur.nom}</div>
src//components/lieux/mobile/LieuView.js:            {programmateur.email && (
src//components/lieux/mobile/LieuView.js:                <a href={`mailto:${programmateur.email}`}>
src//components/lieux/mobile/LieuView.js:                  {programmateur.email}
src//components/lieux/mobile/LieuView.js:            {programmateur.telephone && (
src//components/lieux/mobile/LieuView.js:                <a href={`tel:${programmateur.telephone}`}>
src//components/lieux/mobile/LieuView.js:                  {programmateur.telephone}
src//components/lieux/mobile/LieuView.js:          <div className="text-muted">Aucun programmateur associé</div>
src//components/contrats/sections/ContratInfoCard.js:const ContratInfoCard = ({ contrat, concert, template, lieu, artiste, programmateur }) => {
src//components/contrats/sections/ContratInfoCard.js:    programmateur
src//components/contrats/sections/ContratInfoCard.js:    console.log('[DEBUG ContratInfoCard] formatProgrammateur - programmateur:', programmateur, 'concert?.programmateurNom:', concert?.programmateurNom);
src//components/contrats/sections/ContratInfoCard.js:    if (!programmateur && !concert?.programmateurNom) {
src//components/contrats/sections/ContratInfoCard.js:    if (programmateur) {
src//components/contrats/sections/ContratInfoCard.js:      const nomComplet = programmateur.prenom && programmateur.nom 
src//components/contrats/sections/ContratInfoCard.js:        ? `${programmateur.prenom} ${programmateur.nom}`
src//components/contrats/sections/ContratInfoCard.js:        : programmateur.nom || 'Nom non spécifié';
src//components/contrats/sections/ContratInfoCard.js:      const structure = programmateur.structureCache?.raisonSociale 
src//components/contrats/sections/ContratInfoCard.js:        || programmateur.structure?.nom 
src//components/contrats/sections/ContratInfoCard.js:        || programmateur.structure 
src//components/contrats/sections/ContratInfoCard.js:    return concert.programmateurNom;
src//components/contrats/sections/ContratPdfViewer.js:    programmateurData: pdfData.programmateur,
src//components/contrats/sections/ContratsTable.js:      key: 'concert.programmateurNom',
src//components/contrats/sections/ContratsTable.js:        <div className={styles.programmateurInfo}>
src//components/contrats/sections/ContratsTable.js:          {contrat.concert?.programmateurNom || 'N/A'}
src//components/contrats/desktop/sections/ContratDebugPanel.js:  programmateur,
src//components/contrats/desktop/sections/ContratDebugPanel.js:          <h6>Données du programmateur</h6>
src//components/contrats/desktop/sections/ContratDebugPanel.js:            {JSON.stringify(programmateur, null, 2)}
src//components/contrats/desktop/sections/UserGuide.js:          <li>Les variables sont indiquées entre accolades, par exemple {'{programmateur_nom}'}</li>
src//components/contrats/desktop/sections/UserGuide.js:          <li>Lors de la génération, {'{programmateur_nom}'} sera remplacé par le nom du programmateur</li>
src//components/contrats/desktop/sections/ContratGenerationActions.js:  programmateur,
src//components/contrats/desktop/sections/ContratGenerationActions.js:                programmateurData={programmateur}
src//components/contrats/desktop/ContratGenerator.js:const ContratGenerator = ({ concert, programmateur, artiste, lieu }) => {
src//components/contrats/desktop/ContratGenerator.js:  } = useContratGenerator(concert, programmateur, artiste, lieu);
src//components/contrats/desktop/ContratGenerator.js:                programmateur={programmateur}
src//components/contrats/desktop/ContratGenerator.js:          programmateur={programmateur}
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur', value: 'programmateur_nom' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Structure du programmateur', value: 'programmateur_structure_nom' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Nom', value: 'programmateur_nom' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Email', value: 'programmateur_email' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Téléphone', value: 'programmateur_telephone' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Structure', value: 'programmateur_structure_nom' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Nom', value: 'programmateur_nom' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Fonction', value: 'programmateur_fonction' },
src//components/contrats/desktop/hooks/useTemplateVariables.js:    { label: 'Programmateur - Structure', value: 'programmateur_structure_nom' },
src//components/contrats/desktop/hooks/useTemplateEditor.js:        programmateur_nom: 'Jean Dupont',
src//components/contrats/desktop/hooks/useContratTemplatePreview.js:      .replace(/{programmateur_nom}/g, 'Jean Dupont')
src//components/contrats/desktop/hooks/useContratTemplatePreview.js:      .replace(/{programmateur_structure}/g, 'Association Culturelle XYZ')
src//components/contrats/desktop/hooks/useContratTemplatePreview.js:      .replace(/{programmateur_email}/g, 'contact@asso-xyz.fr')
src//components/contrats/desktop/hooks/useContratTemplatePreview.js:      .replace(/{programmateur_siret}/g, '123 456 789 00012')
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Nom du programmateur', value: '{programmateur_nom}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Prénom du programmateur', value: '{programmateur_prenom}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Structure du programmateur', value: '{programmateur_structure}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Email du programmateur', value: '{programmateur_email}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Téléphone du programmateur', value: '{programmateur_telephone}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Adresse du programmateur', value: '{programmateur_adresse}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'SIRET du programmateur', value: '{programmateur_siret}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'N° TVA du programmateur', value: '{programmateur_numero_intracommunautaire}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Représentant légal', value: '{programmateur_representant}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Programmateur', label: 'Qualité du représentant', value: '{programmateur_qualite_representant}' },
src//components/contrats/ContratTemplateEditorSimple.js:    { category: 'Signature', label: 'Fonction programmateur', value: '{programmateur_fonction}' },
src//components/artistes/mobile/ArtisteView.js:                        <div className={styles.concertProgrammateur}>{concert.programmateurNom || '-'}</div>
src//components/debug/StructureVariableTest.js:        programmateur: { ...mockProgrammateur, structureId: structure.id },
src//hooks/concerts/useConcertFilters.js:        concert.programmateurNom?.toLowerCase().includes(term) ||
src//hooks/concerts/useConcertFormFixed.js:      programmateurNom: '',
src//hooks/concerts/useConcertFormFixed.js:      if (formData.contactId && formData.programmateurNom) {
src//hooks/concerts/useConcertFormFixed.js:          nom: formData.programmateurNom,
src//hooks/concerts/useConcertFormFixed.js:          prenom: formData.programmateurPrenom || ''
src//hooks/concerts/useConcertFormFixed.js:  const handleSelectProgrammateur = useCallback((programmateur) => {
src//hooks/concerts/useConcertFormFixed.js:    debugLog('[useConcertFormFixed] Programmateur sélectionné:', programmateur);
src//hooks/concerts/useConcertFormFixed.js:    setLocalProgrammateur(programmateur);
src//hooks/concerts/useConcertFormFixed.js:    if (programmateur) {
src//hooks/concerts/useConcertFormFixed.js:          value: programmateur.id
src//hooks/concerts/useConcertFormFixed.js:          name: 'programmateurNom',
src//hooks/concerts/useConcertFormFixed.js:          value: `${programmateur.prenom || ''} ${programmateur.nom || ''}`.trim()
src//hooks/concerts/useConcertFormFixed.js:    genericFormHook.handleChange({ target: { name: 'programmateurNom', value: '' } });
src//hooks/concerts/useConcertFormFixed.js:    programmateur: localProgrammateur,
src//hooks/concerts/useConcertListSimplified.js:          concert.programmateur?.nom
src//hooks/contrats/useContratGenerator.js:export const useContratGenerator = (concert, programmateur, artiste, lieu) => {
src//hooks/contrats/useContratGenerator.js:        if (programmateur?.structureId) {
src//hooks/contrats/useContratGenerator.js:          console.log("Chargement de la structure du programmateur:", programmateur.structureId);
src//hooks/contrats/useContratGenerator.js:            const structureDoc = await getDoc(doc(db, 'structures', programmateur.structureId));
src//hooks/contrats/useContratGenerator.js:              console.warn("Structure non trouvée avec l'ID:", programmateur.structureId);
src//hooks/contrats/useContratGenerator.js:  }, [concert?.id, programmateur?.structureId, currentOrganization?.id]);
src//hooks/contrats/useContratGenerator.js:    console.log("🔍 programmateur.structureId:", programmateur?.structureId);
src//hooks/contrats/useContratGenerator.js:      console.log("⚠️ Structure non chargée, utilisation des données du programmateur:", {
src//hooks/contrats/useContratGenerator.js:        structure: programmateur?.structure,
src//hooks/contrats/useContratGenerator.js:        siret: programmateur?.siret,
src//hooks/contrats/useContratGenerator.js:        adresse: programmateur?.adresse
src//hooks/contrats/useContratGenerator.js:      programmateur_nom: programmateur?.nom || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      programmateur_prenom: programmateur?.prenom || '',
src//hooks/contrats/useContratGenerator.js:      programmateur_structure: structureData?.nom || programmateur?.structure || 'Non spécifiée',
src//hooks/contrats/useContratGenerator.js:      programmateur_email: programmateur?.email || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      programmateur_telephone: programmateur?.telephone || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      programmateur_siret: structureData?.siret || programmateur?.siret || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      contact_nom: programmateur?.nom || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      contact_prenom: programmateur?.prenom || '',
src//hooks/contrats/useContratGenerator.js:      contact_structure: structureData?.nom || programmateur?.structure || 'Non spécifiée',
src//hooks/contrats/useContratGenerator.js:      contact_email: programmateur?.email || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      contact_telephone: programmateur?.telephone || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      contact_siret: structureData?.siret || programmateur?.siret || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:        return programmateur?.adresse || 'Non spécifiée';
src//hooks/contrats/useContratGenerator.js:      programmateur_adresse: (() => {
src//hooks/contrats/useContratGenerator.js:        return programmateur?.adresse || 'Non spécifiée';
src//hooks/contrats/useContratGenerator.js:      programmateur_numero_intracommunautaire: structureData?.numeroIntracommunautaire || programmateur?.numeroIntracommunautaire || programmateur?.numero_intracommunautaire || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      programmateur_representant: programmateur?.representant || programmateur?.nom || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      programmateur_qualite_representant: programmateur?.qualiteRepresentant || programmateur?.qualite_representant || programmateur?.fonction || 'Non spécifiée',
src//hooks/contrats/useContratGenerator.js:      structure_nom: safeStringValue(structureData?.nom || structureData?.raisonSociale || programmateur?.structure, 'Non spécifiée'),
src//hooks/contrats/useContratGenerator.js:      nomProgrammateur: programmateur?.nom || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      prenomProgrammateur: programmateur?.prenom || '',
src//hooks/contrats/useContratGenerator.js:      adresseProgrammateur: programmateur?.adresse || 'Non spécifiée',
src//hooks/contrats/useContratGenerator.js:      emailProgrammateur: programmateur?.email || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      telephoneProgrammateur: programmateur?.telephone || 'Non spécifié',
src//hooks/contrats/useContratGenerator.js:      structureProgrammateur: programmateur?.structure || 'Non spécifiée',
src//hooks/contrats/useContratGenerator.js:  }, [structureData, programmateur, artiste, lieu, concert, entrepriseInfo]);
src//hooks/contrats/contractVariables.js:export const mapProgrammateurWithStructure = (programmateurData, structureData) => {
src//hooks/contrats/contractVariables.js:  const programmateur = {
src//hooks/contrats/contractVariables.js:    'programmateur_nom': programmateurData?.nom || '',
src//hooks/contrats/contractVariables.js:    'programmateur_prenom': programmateurData?.prenom || '',
src//hooks/contrats/contractVariables.js:    'programmateur_email': programmateurData?.email || '',
src//hooks/contrats/contractVariables.js:    'programmateur_telephone': programmateurData?.telephone || '',
src//hooks/contrats/contractVariables.js:    'programmateur_representant': `${programmateurData?.prenom || ''} ${programmateurData?.nom || ''}`.trim(),
src//hooks/contrats/contractVariables.js:    'programmateur_qualite_representant': programmateurData?.fonction || ''
src//hooks/contrats/contractVariables.js:    programmateur['programmateur_structure'] = structureData.nom || '';
src//hooks/contrats/contractVariables.js:    programmateur['programmateur_siret'] = structureData.siret || '';
src//hooks/contrats/contractVariables.js:    programmateur['programmateur_adresse'] = structureData.adresse || '';
src//hooks/contrats/contractVariables.js:    programmateur['programmateur_numero_intracommunautaire'] = structureData.numeroIntracommunautaire || '';
src//hooks/contrats/contractVariables.js:  return programmateur;
src//hooks/contrats/contractVariables.js:  "programmateur_nom", "programmateur_structure", "programmateur_email", "programmateur_siret",
src//hooks/contrats/contractVariables.js:  "programmateur_numero_intracommunautaire",
src//hooks/contrats/contractVariables.js:  "programmateur_adresse",
src//hooks/contrats/contractVariables.js:  "programmateur_representant",
src//hooks/contrats/contractVariables.js:  "programmateur_qualite_representant",
src//hooks/contrats/contractVariables.js:  "programmateur_nom", "programmateur_structure", "programmateur_email", "programmateur_siret",
src//hooks/contrats/contractVariables.js:  "programmateur_numero_intracommunautaire",
src//hooks/contrats/contractVariables.js:  "programmateur_adresse",
src//hooks/contrats/contractVariables.js:  "programmateur_representant",
src//hooks/contrats/contractVariables.js:  "programmateur_qualite_representant",
src//hooks/contrats/contractVariables.js:  "programmateur_nom", "programmateur_structure", "artiste_nom", "lieu_ville",
src//hooks/contrats/contractVariables.js:  "programmateur_representant",
src//hooks/contrats/contractVariables.js:  "programmateur_qualite_representant",
src//pages/ContratDetailsPage.js:    programmateur, 
src//pages/ContratDetailsPage.js:    programmateur,
src//pages/ContratDetailsPage.js:            programmateur,
src//pages/ContratDetailsPage.js:  }, [searchParams, loading, contrat, showPdfViewer, contratId, navigate, togglePdfViewer, setPreviewType, generatePDFPreview, concert, template, programmateur, lieu, artiste, entreprise]);
src//pages/ContratDetailsPage.js:    programmateur,
src//pages/ContratDetailsPage.js:        programmateur={programmateur}
src//pages/contratTemplatesPage.js:          <div>{programmateur_nom}</div>
src//pages/ContratGenerationPage.js:            programmateur={contact}
src//pages/FormResponsePage.js:          if (formLinkData.contactEmail || formLinkData.programmateurEmail) {
src//pages/FormResponsePage.js:            setContactEmail(formLinkData.contactEmail || formLinkData.programmateurEmail);
src//services/relancesAutomatiquesService.js:    description: 'Envoyer le formulaire de validation au programmateur',
src//services/relancesAutomatiquesService.js:    description: 'Générer et envoyer le contrat au programmateur',
