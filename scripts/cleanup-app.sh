#!/bin/bash

# Script de nettoyage pour TourCraft Booking App
# Date: Mai 2025
# Description: Supprime les fichiers de test, debug et obsol√®tes

echo "üßπ D√©but du nettoyage de l'application TourCraft..."

# Couleurs pour l'output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour demander confirmation
confirm() {
    read -p "$1 [y/N] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        return 0
    else
        return 1
    fi
}

# 1. Suppression des pages de test
echo -e "\n${YELLOW}üìã Fichiers de test √† supprimer:${NC}"
echo "- src/pages/TestDiagnostic.js"
echo "- src/pages/TestParametresVersions.js"
echo "- src/pages/TestContractError.js"
echo "- src/pages/test/StyleTestPage.js"
echo "- src/components/TestArtistesList.js"

if confirm "Supprimer ces fichiers de test?"; then
    rm -f src/pages/TestDiagnostic.js
    rm -f src/pages/TestParametresVersions.js
    rm -f src/pages/TestContractError.js
    rm -f src/pages/test/StyleTestPage.js
    rm -f src/components/TestArtistesList.js
    echo -e "${GREEN}‚úÖ Fichiers de test supprim√©s${NC}"
fi

# 2. Suppression du dossier debug
echo -e "\n${YELLOW}üêõ Dossier debug √† supprimer:${NC}"
echo "- src/components/debug/ (contient 5 composants)"

if confirm "Supprimer le dossier debug?"; then
    rm -rf src/components/debug/
    echo -e "${GREEN}‚úÖ Dossier debug supprim√©${NC}"
fi

# 3. Suppression des fichiers backup
echo -e "\n${YELLOW}üíæ Fichiers backup √† supprimer:${NC}"
find src -name "*.original.js" -o -name "*.new" | while read file; do
    echo "- $file"
done

if confirm "Supprimer tous ces fichiers backup?"; then
    find src -name "*.original.js" -delete
    find src -name "*.new" -delete
    echo -e "${GREEN}‚úÖ Fichiers backup supprim√©s${NC}"
fi

# 4. Nettoyage des console.log (optionnel)
echo -e "\n${YELLOW}üîç Recherche des console.log...${NC}"
log_count=$(grep -r "console\.\(log\|time\|timeEnd\|error\|warn\)" src --include="*.js" --include="*.jsx" | wc -l)
echo "Trouv√© $log_count occurrences de console.*"

if confirm "Supprimer tous les console.log/time/error/warn?"; then
    # Cr√©er un backup avant modification
    echo "Cr√©ation d'un backup dans /tmp/tourcraft-backup-console-logs.tar.gz"
    tar -czf /tmp/tourcraft-backup-console-logs.tar.gz src/
    
    # Supprimer les console.log
    find src -name "*.js" -o -name "*.jsx" | while read file; do
        sed -i.bak '/console\.\(log\|time\|timeEnd\|error\|warn\)/d' "$file"
        rm -f "$file.bak"
    done
    echo -e "${GREEN}‚úÖ Console.log supprim√©s (backup: /tmp/tourcraft-backup-console-logs.tar.gz)${NC}"
fi

# 5. Nettoyage des imports comment√©s
echo -e "\n${YELLOW}üí¨ Recherche des imports comment√©s...${NC}"
commented_imports=$(grep -r "^[[:space:]]*//.*import" src --include="*.js" --include="*.jsx" | wc -l)
echo "Trouv√© $commented_imports imports comment√©s"

if confirm "Supprimer les imports comment√©s?"; then
    find src -name "*.js" -o -name "*.jsx" | while read file; do
        sed -i.bak '/^[[:space:]]*\/\/.*import/d' "$file"
        rm -f "$file.bak"
    done
    echo -e "${GREEN}‚úÖ Imports comment√©s supprim√©s${NC}"
fi

# 6. Rapport final
echo -e "\n${GREEN}üìä Rapport de nettoyage:${NC}"
echo "- Fichiers JS/JSX total: $(find src -name "*.js" -o -name "*.jsx" | wc -l)"
echo "- Fichiers CSS total: $(find src -name "*.css" | wc -l)"
echo "- CSS Modules: $(find src -name "*.module.css" | wc -l)"
echo "- Lignes de code total: $(find src -name "*.js" -o -name "*.jsx" | xargs wc -l | tail -1 | awk '{print $1}')"

# 7. Linter
echo -e "\n${YELLOW}üîß Ex√©cution d'ESLint pour nettoyer les imports inutilis√©s...${NC}"
if confirm "Ex√©cuter ESLint avec --fix?"; then
    npm run lint -- --fix
    echo -e "${GREEN}‚úÖ ESLint ex√©cut√©${NC}"
fi

echo -e "\n${GREEN}üéâ Nettoyage termin√©!${NC}"
echo -e "${YELLOW}N'oubliez pas de:${NC}"
echo "1. V√©rifier que l'application fonctionne toujours"
echo "2. Commiter les changements"
echo "3. Tester les fonctionnalit√©s critiques"