#!/bin/bash

# Script d'audit pour la migration programmateur ‚Üí contact
# Auteur: Assistant IA TourCraft
# Date: 29 Mai 2025

echo "üîç AUDIT MIGRATION PROGRAMMATEUR ‚Üí CONTACT"
echo "=========================================="
echo ""

# Fonction pour afficher les couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# 1. Compter les occurrences totales
echo -e "${BLUE}üìä STATISTIQUES GLOBALES${NC}"
echo "===================="

TOTAL_OCCURRENCES=$(grep -r "programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l)
echo -e "Total occurrences 'programmateur': ${RED}$TOTAL_OCCURRENCES${NC}"

TOTAL_FILES=$(grep -r "programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | cut -d: -f1 | sort | uniq | wc -l)
echo -e "Fichiers concern√©s: ${YELLOW}$TOTAL_FILES${NC}"

echo ""

# 2. R√©partition par cat√©gorie
echo -e "${BLUE}üìÅ R√âPARTITION PAR CAT√âGORIE${NC}"
echo "=========================="

echo -e "${PURPLE}üèóÔ∏è  Hooks de contrats:${NC}"
grep -r "programmateur" src/hooks/contrats/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}üìÑ Composants PDF:${NC}"
grep -r "programmateur" src/components/pdf/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}üìù Formulaires:${NC}"
grep -r "programmateur" src/components/forms/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}üéµ Concerts:${NC}"
grep -r "programmateur" src/hooks/concerts/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}üìã Contrats (composants):${NC}"
grep -r "programmateur" src/components/contrats/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}üè¢ Lieux:${NC}"
grep -r "programmateur" src/components/lieux/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}üìÑ Pages:${NC}"
grep -r "programmateur" src/pages/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo -e "${PURPLE}‚öôÔ∏è  Services:${NC}"
grep -r "programmateur" src/services/ --include="*.js" 2>/dev/null | wc -l | xargs echo "  Occurrences:"

echo ""

# 3. Top 10 des fichiers les plus impact√©s
echo -e "${BLUE}üéØ TOP 10 FICHIERS LES PLUS IMPACT√âS${NC}"
echo "=================================="

grep -r "programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | \
cut -d: -f1 | sort | uniq -c | sort -nr | head -10 | \
while read count file; do
    filename=$(basename "$file")
    dir=$(dirname "$file" | sed 's|src/||')
    echo -e "${RED}$count${NC} occurrences - ${YELLOW}$filename${NC} (${dir})"
done

echo ""

# 4. Analyse des types d'occurrences
echo -e "${BLUE}üîç ANALYSE DES TYPES D'OCCURRENCES${NC}"
echo "==============================="

echo -e "${PURPLE}Variables et propri√©t√©s:${NC}"
grep -r "programmateur\." src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l | xargs echo "  Acc√®s aux propri√©t√©s:"

echo -e "${PURPLE}Noms de fonctions:${NC}"
grep -r "Programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l | xargs echo "  Noms de composants/fonctions:"

echo -e "${PURPLE}Commentaires:${NC}"
grep -r "// .*programmateur\|/\* .*programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l | xargs echo "  Dans les commentaires:"

echo -e "${PURPLE}Cha√Ænes de caract√®res:${NC}"
grep -r "\".*programmateur\|'.*programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l | xargs echo "  Dans les cha√Ænes:"

echo ""

# 5. V√©rification des imports
echo -e "${BLUE}üì¶ IMPORTS ET EXPORTS${NC}"
echo "=================="

echo -e "${PURPLE}Imports de composants Programmateur:${NC}"
grep -r "import.*Programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l | xargs echo "  Imports:"

echo -e "${PURPLE}Exports de composants Programmateur:${NC}"
grep -r "export.*Programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | wc -l | xargs echo "  Exports:"

echo ""

# 6. √âtat des tests
echo -e "${BLUE}üß™ √âTAT DES TESTS${NC}"
echo "==============="

echo -e "${PURPLE}Tests mentionnant 'programmateur':${NC}"
if [ -d "src/__tests__" ] || [ -d "tests" ] || find src -name "*.test.js" -o -name "*.spec.js" | head -1 > /dev/null; then
    grep -r "programmateur" src/ --include="*.test.js" --include="*.spec.js" 2>/dev/null | wc -l | xargs echo "  Occurrences dans les tests:"
else
    echo "  Aucun r√©pertoire de tests trouv√©"
fi

echo ""

# 7. Recommandations de priorit√©
echo -e "${BLUE}üéØ RECOMMANDATIONS DE PRIORIT√â${NC}"
echo "============================"

echo -e "${RED}üî• PRIORIT√â CRITIQUE:${NC}"
echo "  1. Hooks de contrats (g√©n√©ration PDF affect√©e)"
echo "  2. Composants PDF (templates de contrats)"
echo "  3. Formulaires publics (utilisateurs externes)"

echo -e "${YELLOW}‚ö†Ô∏è  PRIORIT√â HAUTE:${NC}"
echo "  4. Hooks de concerts (workflows principaux)"
echo "  5. Sections de contrats (interface admin)"
echo "  6. Validation de formulaires"

echo -e "${GREEN}üìã PRIORIT√â MOYENNE:${NC}"
echo "  7. Vues et pages (interface utilisateur)"
echo "  8. Services utilitaires"
echo "  9. Composants mineurs"

echo ""

# 8. G√©n√©ration du rapport d√©taill√©
echo -e "${BLUE}üìÑ G√âN√âRATION DU RAPPORT D√âTAILL√â${NC}"
echo "==============================="

REPORT_FILE="audit_migration_programmateur_$(date +%Y%m%d_%H%M%S).txt"

{
    echo "AUDIT MIGRATION PROGRAMMATEUR ‚Üí CONTACT"
    echo "Date: $(date)"
    echo "======================================="
    echo ""
    echo "FICHIERS AVEC OCCURRENCES:"
    echo "========================="
    grep -r "programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null | \
    cut -d: -f1 | sort | uniq -c | sort -nr
    echo ""
    echo "D√âTAIL DES OCCURRENCES PAR FICHIER:"
    echo "=================================="
    grep -r "programmateur" src/ --include="*.js" --include="*.jsx" 2>/dev/null
} > "$REPORT_FILE"

echo -e "Rapport d√©taill√© g√©n√©r√©: ${GREEN}$REPORT_FILE${NC}"

echo ""

# 9. Suggestions d'actions
echo -e "${BLUE}üöÄ PROCHAINES ACTIONS SUGG√âR√âES${NC}"
echo "============================="

if [ "$TOTAL_OCCURRENCES" -gt 200 ]; then
    echo -e "${RED}‚ö†Ô∏è  Migration importante d√©tect√©e (>200 occurrences)${NC}"
    echo "   Recommandation: Migration en plusieurs phases"
    echo "   1. Commencer par les hooks de contrats"
    echo "   2. Continuer avec les composants PDF"
    echo "   3. Traiter les formulaires et validation"
elif [ "$TOTAL_OCCURRENCES" -gt 50 ]; then
    echo -e "${YELLOW}üìù Migration mod√©r√©e d√©tect√©e (50-200 occurrences)${NC}"
    echo "   Recommandation: Migration en 2 phases"
    echo "   1. Composants critiques (contrats, PDF)"
    echo "   2. Interface utilisateur et services"
else
    echo -e "${GREEN}‚úÖ Migration l√©g√®re d√©tect√©e (<50 occurrences)${NC}"
    echo "   Recommandation: Migration en une seule session"
fi

echo ""
echo -e "${GREEN}‚ú® Audit termin√© avec succ√®s!${NC}"
echo ""

# Optionnel: Ouvrir le rapport dans un √©diteur
if command -v code > /dev/null 2>&1; then
    echo "üí° Tip: Ouvrez le rapport avec 'code $REPORT_FILE'"
fi
