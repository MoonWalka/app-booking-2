/*
 * Styles pour ListWithFilters
 * Standardisé selon le Guide de Style CSS de TourCraft
 * Dernière mise à jour: 16 May 2025
 */

/* Styles pour le composant ListWithFilters */

.container {
  background-color: var(--tc-card-bg);
  border-radius: var(--tc-border-radius-lg);
  box-shadow: var(--tc-box-shadow));
  padding: var(--tc-spacing-lg);
  margin-bottom: var(--tc-spacing-xl);
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--tc-spacing-lg);
}

.title {
  margin: 0;
  font-size: var(--tc-font-size-lg);
  font-weight: var(--tc-font-weight-semibold);
  color: var(--tc-text-dark);
}

.actionsWrapper {
  display: flex;
  gap: var(--tc-spacing-sm);
}

.refreshButton {
  background-color: transparent;
  border: var(--tc-border-width) solid var(--tc-border-light);
  color: var(--tc-text-secondary);
  border-radius: var(--tc-border-radius);
  padding: var(--tc-spacing-sm);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--tc-transition-short);
}

.refreshButton:hover {
  background-color: var(--tc-bg-hover);
  color: var(--tc-primary-color);
}

.filtersContainer {
  margin-bottom: var(--tc-spacing-lg);
  padding: var(--tc-spacing-md);
  background-color: var(--tc-bg-light);
  border-radius: var(--tc-border-radius);
}

.filters {
  display: flex;
  flex-wrap: wrap;
  gap: var(--tc-spacing-md);
  margin-bottom: var(--tc-spacing-md);
}

.filterItem {
  flex: 1 1 200px;
}

.filterLabel {
  display: block;
  margin-bottom: var(--tc-spacing-sm);
  color: var(--tc-text-secondary);
  font-size: var(--tc-font-size-sm);
}

.filterInput, 
.filterSelect {
  width: 100%;
  padding: var(--tc-spacing-sm);
  border: var(--tc-border-width) solid var(--tc-border-medium);
  border-radius: var(--tc-border-radius);
  font-size: var(--tc-font-size-sm);
}

.filterActions {
  display: flex;
  justify-content: flex-end;
  gap: var(--tc-spacing-sm);
}

.applyButton {
  background-color: var(--tc-primary-color);
  color: var(--tc-text-light);
  border: none;
  border-radius: var(--tc-border-radius);
  padding: var(--tc-spacing-sm) var(--tc-spacing-md);
  cursor: pointer;
  font-size: var(--tc-font-size-sm);
  transition: var(--tc-transition-short);
}

.applyButton:hover {
  background-color: var(--tc-primary-dark);
}

.resetButton {
  background-color: transparent;
  border: var(--tc-border-width) solid var(--tc-border-medium);
  color: var(--tc-text-secondary);
  border-radius: var(--tc-border-radius);
  padding: var(--tc-spacing-sm) var(--tc-spacing-md);
  cursor: pointer;
  font-size: var(--tc-font-size-sm);
  transition: var(--tc-transition);
}

.resetButton:hover {
  background-color: var(--tc-error-light);
  color: var(--tc-danger-color);
  border-color: var(--tc-error-light);
}

.tableWrapper {
  overflow-x: auto;
}

.table {
  width: 100%;
  border-collapse: collapse;
}

.tableHeader {
  text-align: left;
  padding: var(--tc-spacing-sm) var(--tc-spacing-md);
  background-color: var(--tc-bg-light);
  border-bottom: 2px solid var(--tc-border-medium);
  color: var(--tc-text-secondary);
  font-weight: var(--tc-font-weight-semibold);
  font-size: var(--tc-font-size-sm);
}

.sortable {
  cursor: pointer;
}

.sortable:hover {
  background-color: var(--tc-bg-hover);
}

.headerContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.sortIcon {
  margin-left: var(--tc-spacing-sm);
  font-size: var(--tc-font-size-xs);
}

.tableRow {
  border-bottom: var(--tc-border-width) solid var(--tc-border-light);
  transition: var(--tc-transition-short);
  cursor: pointer;
}

.tableRow:hover {
  background-color: var(--tc-bg-hover);
}

.tableCell {
  padding: var(--tc-spacing-sm) var(--tc-spacing-md);
  color: var(--tc-text-dark);
  font-size: var(--tc-font-size-sm);
}

.noData {
  padding: var(--tc-spacing-xl);
  text-align: center;
}

.loading, 
.noResults {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--tc-spacing-sm);
  color: var(--tc-text-secondary);
  font-size: var(--tc-font-size-sm);
}

.loadingMoreContainer,
.loadMoreContainer {
  display: flex;
  justify-content: center;
  padding: var(--tc-spacing-md) 0 0;
}

.loadMoreButton {
  background-color: transparent;
  border: var(--tc-border-width) solid var(--tc-border-medium);
  color: var(--tc-text-secondary);
  border-radius: var(--tc-border-radius);
  padding: var(--tc-spacing-sm) var(--tc-spacing-md);
  cursor: pointer;
  font-size: var(--tc-font-size-sm);
  transition: var(--tc-transition-short);
}

.loadMoreButton:hover {
  background-color: var(--tc-bg-hover);
}

.loadingMoreContainer {
  display: flex;
  align-items: center;
  gap: var(--tc-spacing-sm);
  color: var(--tc-text-secondary);
  font-size: var(--tc-font-size-sm);
}

/* Responsive */
@media (max-width: 768px) {
  .container {
    padding: var(--tc-spacing-md);
  }

  .header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--tc-spacing-sm);
  }

  .actionsWrapper {
    width: 100%;
    justify-content: flex-end;
    margin-top: var(--tc-spacing-xs);
  }

  .filters {
    gap: var(--tc-spacing-sm);
  }

  .filterItem {
    flex: 1 1 100%;
  }

  .filterActions {
    flex-direction: column;
    width: 100%;
  }

  .applyButton, .resetButton {
    width: 100%;
    padding: var(--tc-spacing-sm);
  }

  .table {
    font-size: var(--tc-font-size-xs);
  }

  .tableHeader, .tableCell {
    padding: var(--tc-spacing-xs);
  }
}