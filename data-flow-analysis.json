{
  "timestamp": "2025-07-04T21:11:10.628Z",
  "dataFlows": {
    "pageToService": [
      {
        "page": "CollaborationParametragePage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "ConfirmationPage.js",
        "services": [
          "preContratService",
          "tachesService",
          "firebase-service"
        ]
      },
      {
        "page": "ContratGenerationNewPage.js",
        "services": [
          "firebase-service",
          "firebase-service",
          "preContratService"
        ]
      },
      {
        "page": "ContratGenerationPage.js",
        "services": [
          "firebase-service",
          "firebase-service"
        ]
      },
      {
        "page": "ContratRedactionPage.js",
        "services": [
          "firebase-service",
          "firebase-service",
          "contratService"
        ]
      },
      {
        "page": "ContratsPage.js",
        "services": [
          "firebase-service",
          "firebase-service",
          "contratService"
        ]
      },
      {
        "page": "DateCreationPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "FactureGeneratorPage.js",
        "services": [
          "firebase-service",
          "contratService",
          "factureService"
        ]
      },
      {
        "page": "FacturesPage.js",
        "services": [
          "firebase-service",
          "firebase-service",
          "factureService"
        ]
      },
      {
        "page": "FestivalsDatesPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "LoginPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "PreContratGenerationPage.js",
        "services": [
          "firebase-service",
          "firebase-service"
        ]
      },
      {
        "page": "ProjetsPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "TachesPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "contratTemplatesEditPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "contratTemplatesPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "factureTemplatesEditPage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "page": "factureTemplatesPage.js",
        "services": [
          "firebase-service"
        ]
      }
    ],
    "serviceToDatabase": [],
    "componentToContext": [
      {
        "component": "ArtisteCreationModal.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "PrivateRoute.js",
        "contexts": [
          "useAuth",
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "EntreprisesManagerFirebase.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "DesktopLayout.js",
        "contexts": [
          "useAuth",
          "useTabs"
        ]
      },
      {
        "component": "SalleCreationModal.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ConcertsTableView.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "DatesList.js",
        "contexts": [
          "useTabs",
          "useOrganization"
        ]
      },
      {
        "component": "PublicationsList.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ArtisteSearchSectionWithFallback.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TagsManager.js",
        "contexts": [
          "useOrganization",
          "useTabs"
        ]
      },
      {
        "component": "ContactFacturesTable.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactFormUnified.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactViewTabs.js",
        "contexts": [
          "useTabs",
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "ContactsListFiltered.js",
        "contexts": [
          "useOrganization",
          "useTabs"
        ]
      },
      {
        "component": "FestivalCreationModal.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactForm.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactModalsContainer.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "PersonneCreationModal.js",
        "contexts": [
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "StructureCreationModal.js",
        "contexts": [
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "ContactBottomTabs.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "ContratGeneratorNew.js",
        "contexts": [
          "useTabs",
          "useOrganization"
        ]
      },
      {
        "component": "ContratModelsModal.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "DatesTable.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ArtisteFirestoreDiagnostic.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ArtisteOrganizationMatcher.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ArtisteSearchDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ArtisteSearchLiveDebug.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "BidirectionalRelationsFixer.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "BrevoDiagnostic.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "BrevoKeyRecovery.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "BrevoTemplateCreator.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "BrevoTemplateCustomizer.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "CheckStructureMigration.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "CleanOldContractContent.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ConcertContactsDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactCreationTester.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactEmailDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactMigrationTool.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactsAuditTool.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "ContactsFixTool.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "ContactsMigrationDiagnostic.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContactsMigrationFinal.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "DataStructureFixer.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "EntityCreationTester.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "FestitestContactFinder.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "FestivalsDebugger.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "HybridFormatNormalizer.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "LieuMapDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ListDebugger.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "MigrateContractTemplates.js",
        "contexts": [
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "MigrateContractVariables.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "OrganizationContextDiagnostic.js",
        "contexts": [
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "OrganizationIdDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "OrganizationIdFixer.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ParametresMigration.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "QuickContactCreator.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "RIBDebugger.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "RelationalMigrationFixer.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "SophieMadetMigration.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "StructuresClickDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "SystemAuditTool.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TagsHierarchyDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TestDataButton.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TestDeleteContactDebug.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TestWorkflowButton.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TestWorkflowButton2.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "DevisEditor.js",
        "contexts": [
          "useOrganization",
          "useAuth",
          "useTabs"
        ]
      },
      {
        "component": "DevisForm.js",
        "contexts": [
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "DevisList.js",
        "contexts": [
          "useOrganization",
          "useTabs"
        ]
      },
      {
        "component": "DevisTable.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "FacturesTableView.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "PublicContactForm.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "Sidebar.js",
        "contexts": [
          "useContext"
        ]
      },
      {
        "component": "OnboardingFlow.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "OrganizationSelector.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "TypesEvenementContent.js",
        "contexts": [
          "useAuth"
        ]
      },
      {
        "component": "TypesSalleContent.js",
        "contexts": [
          "useAuth"
        ]
      },
      {
        "component": "ParametresCompte.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "ParametresExport.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ParametresFactures.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ParametresOrganisations.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "PreContratGenerator.js",
        "contexts": [
          "useOrganization",
          "useTabs"
        ]
      },
      {
        "component": "ProjetCreationModal.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "StructureViewTabs.js",
        "contexts": [
          "useTabs",
          "useAuth"
        ]
      },
      {
        "component": "useStructureDetails.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "TabManagerProduction.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "AssociatePersonModal.js",
        "contexts": [
          "useOrganization",
          "useTabs"
        ]
      },
      {
        "component": "EntitySelector.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ListWithFilters.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "AuthContext.js",
        "contexts": [
          "useContext"
        ]
      },
      {
        "component": "ContactModalsContext.js",
        "contexts": [
          "useContext"
        ]
      },
      {
        "component": "ModalContext.js",
        "contexts": [
          "useContext"
        ]
      },
      {
        "component": "ModalsContext.js",
        "contexts": [
          "useContext"
        ]
      },
      {
        "component": "OrganizationContext.js",
        "contexts": [
          "useContext",
          "useAuth"
        ]
      },
      {
        "component": "ParametresContext.js",
        "contexts": [
          "useContext",
          "useOrganization"
        ]
      },
      {
        "component": "TabsContext.js",
        "contexts": [
          "useContext"
        ]
      },
      {
        "component": "useGenericEntityDelete.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useGenericEntityDetails.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useGenericEntityForm.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useGenericEntitySearch.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useConcertActions.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "useConcertListData.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContactActionsRelational.js",
        "contexts": [
          "useAuth",
          "useTabs"
        ]
      },
      {
        "component": "useContactContrats.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContactFactures.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContactFestivals.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContactSearchRelational.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContactsRelational.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "useHistoriqueEchanges.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "useSimpleContactDetails.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContratActions.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useContratGenerator.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useValidationBatchActions.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useGenericAction.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useGenericDataFetcher.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useLieuDetails.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useLieuxQuery.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useEntrepriseForm.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useTaches.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "useMultiOrgQuery.js",
        "contexts": [
          "useOrganization",
          "useOrganization",
          "useOrganization"
        ]
      },
      {
        "component": "useTabsSafe.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "CollaborationParametragePage.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "ContratGenerationNewPage.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "ContratRedactionPage.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "ContratsPage.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "DateCreationPage.js",
        "contexts": [
          "useOrganization",
          "useTabs"
        ]
      },
      {
        "component": "DateDetailsPage.js",
        "contexts": [
          "useOrganization",
          "useAuth",
          "useTabs"
        ]
      },
      {
        "component": "DevisPage.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "FactureDetailsPage.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "FactureGeneratorPage.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "FacturesPage.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "FestivalsDatesPage.js",
        "contexts": [
          "useOrganization"
        ]
      },
      {
        "component": "PreContratGenerationPage.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "ProjetsPage.js",
        "contexts": [
          "useTabs"
        ]
      },
      {
        "component": "TableauDeBordPage.js",
        "contexts": [
          "useTabs",
          "useOrganization"
        ]
      },
      {
        "component": "TachesPage.js",
        "contexts": [
          "useOrganization",
          "useAuth"
        ]
      },
      {
        "component": "MigrationPage.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "factureTemplatesEditPage.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      },
      {
        "component": "factureTemplatesPage.js",
        "contexts": [
          "useAuth",
          "useOrganization"
        ]
      }
    ],
    "listToDetails": [],
    "formToService": [
      {
        "form": "contactCreationFromForms.test.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "ContactFormUnified.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "EchangeForm.js",
        "services": [
          "historiqueEchangesService"
        ]
      },
      {
        "form": "ContactForm.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "HybridFormatNormalizer.js",
        "services": [
          "firebase-service",
          "firebase-service"
        ]
      },
      {
        "form": "DevisForm.js",
        "services": [
          "structureService",
          "projetService",
          "contactService",
          "collaborateurService"
        ]
      },
      {
        "form": "FormGenerator.js",
        "services": [
          "firebase-service",
          "brevoTemplateService"
        ]
      },
      {
        "form": "PublicContactForm.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "PreContratFormContainer.js",
        "services": [
          "preContratService"
        ]
      },
      {
        "form": "useConcertForm.js",
        "services": [
          "bidirectionalRelationsService"
        ]
      },
      {
        "form": "useConcertFormWithRelations.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "useConcertFormsManagement.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "useFormTokenValidation.js",
        "services": [
          "firebase-service",
          "preContratService"
        ]
      },
      {
        "form": "useFormValidationData.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "useLieuForm.js",
        "services": [
          "bidirectionalRelationsService"
        ]
      },
      {
        "form": "useEntrepriseForm.js",
        "services": [
          "firebase-service",
          "firebase-service"
        ]
      },
      {
        "form": "useStructureForm.js",
        "services": [
          "bidirectionalRelationsService"
        ]
      },
      {
        "form": "FormResponsePage.js",
        "services": [
          "firebase-service"
        ]
      },
      {
        "form": "PreContratFormResponsePage.js",
        "services": [
          "firebase-service",
          "preContratService"
        ]
      }
    ]
  },
  "components": {
    "App.js": {
      "path": "src/App.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onComplete"
      ],
      "type": "component"
    },
    "brevoEmailIntegration.test.js": {
      "path": "src/__tests__/integration/brevoEmailIntegration.test.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "emailService",
        "brevoTemplateService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "context"
    },
    "contactCreationFromForms.test.js": {
      "path": "src/__tests__/integration/contactCreationFromForms.test.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "ContratDownloadDirect.js": {
      "path": "src/components/api/ContratDownloadDirect.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ArtisteDetail.js": {
      "path": "src/components/artistes/ArtisteDetail.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ArtisteForm.js": {
      "path": "src/components/artistes/mobile/ArtisteForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "ArtistesList.js": {
      "path": "src/components/artistes/mobile/ArtistesList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "ArtisteView.js": {
      "path": "src/components/artistes/mobile/ArtisteView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteBasicInfoSection.js": {
      "path": "src/components/artistes/desktop/sections/ArtisteBasicInfoSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ArtisteContactSection.js": {
      "path": "src/components/artistes/desktop/sections/ArtisteContactSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ArtisteMembersSection.js": {
      "path": "src/components/artistes/desktop/sections/ArtisteMembersSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onKeyPress",
        "onClick",
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteNotesSection.js": {
      "path": "src/components/artistes/desktop/sections/ArtisteNotesSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "index.js": {
      "path": "src/services/index.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "ArtisteCreationModal.js": {
      "path": "src/components/artistes/modal/ArtisteCreationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "modal"
    },
    "ArtisteSearchBar.js": {
      "path": "src/components/artistes/sections/ArtisteSearchBar.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onFocus",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ArtistesEmptyState.js": {
      "path": "src/components/artistes/sections/ArtistesEmptyState.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ArtistesListHeader.js": {
      "path": "src/components/artistes/sections/ArtistesListHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "list"
    },
    "ArtistesLoadMore.js": {
      "path": "src/components/artistes/sections/ArtistesLoadMore.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ArtistesStatsCards.js": {
      "path": "src/components/artistes/sections/ArtistesStatsCards.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "stats"
    },
    "ArtistesTable.js": {
      "path": "src/components/artistes/sections/ArtistesTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onRowClick"
      ],
      "type": "table"
    },
    "PrivateRoute.js": {
      "path": "src/components/auth/PrivateRoute.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization",
        "useAuth"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onComplete"
      ],
      "type": "component"
    },
    "CollaborateursManager.js": {
      "path": "src/components/collaboration/CollaborateursManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClose"
      ],
      "type": "component"
    },
    "EntreprisesManager.js": {
      "path": "src/components/collaboration/EntreprisesManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClose"
      ],
      "type": "component"
    },
    "EntreprisesManagerFirebase.js": {
      "path": "src/components/collaboration/EntreprisesManagerFirebase.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClose"
      ],
      "type": "component"
    },
    "ActionButton.js": {
      "path": "src/components/common/ActionButton.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onProps",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "DebugButton.js": {
      "path": "src/components/common/DebugButton.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "DownloadModal.js": {
      "path": "src/components/common/DownloadModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "modal"
    },
    "EntityViewTabs.js": {
      "path": "src/components/common/EntityViewTabs.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ErrorDisplay.jsx": {
      "path": "src/components/common/ErrorDisplay.jsx",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "GenericDetailView.js": {
      "path": "src/components/common/GenericDetailView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "Layout.js": {
      "path": "src/components/ui/Layout.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "Modal.js": {
      "path": "src/components/common/Modal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "OptimizedModal.js": {
      "path": "src/components/common/OptimizedModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "PublicFormLayout.js": {
      "path": "src/components/forms/public/PublicFormLayout.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "RelationCard.js": {
      "path": "src/components/common/RelationCard.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onKeyDown"
      ],
      "type": "stats"
    },
    "RepresentationsSection.js": {
      "path": "src/components/common/RepresentationsSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onBlur",
        "onKeyPress",
        "onClick",
        "onChange",
        "onBlur",
        "onClick"
      ],
      "type": "component"
    },
    "Spinner.js": {
      "path": "src/components/common/Spinner.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "StatusWithInfo.js": {
      "path": "src/components/common/StatusWithInfo.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "TabNavigation.js": {
      "path": "src/components/common/TabNavigation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "UnderConstruction.js": {
      "path": "src/components/common/UnderConstruction.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "UnifiedConcertSelector.js": {
      "path": "src/components/common/UnifiedConcertSelector.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRemove",
        "onCreate",
        "onClick"
      ],
      "type": "component"
    },
    "UnifiedContactSelector.js": {
      "path": "src/components/common/UnifiedContactSelector.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRemove",
        "onClick",
        "onSelect",
        "onCreate",
        "onClick"
      ],
      "type": "component"
    },
    "UnifiedContactSelector.test.js": {
      "path": "src/components/common/__tests__/UnifiedContactSelector.test.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "DesktopLayout.js": {
      "path": "src/components/common/layout/DesktopLayout.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onDropdownToggle"
      ],
      "type": "component"
    },
    "CommentListModal.js": {
      "path": "src/components/common/modals/CommentListModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "contacts/personnesService"
      ],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onClick",
        "onClick"
      ],
      "type": "list"
    },
    "CommentModal.js": {
      "path": "src/components/common/modals/CommentModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onSubmit",
        "onChange",
        "onClick"
      ],
      "type": "modal"
    },
    "SalleCreationModal.js": {
      "path": "src/components/common/modals/SalleCreationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onSubmit",
        "onSelect",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "StepNavigation.js": {
      "path": "src/components/common/steps/StepNavigation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onNext",
        "onBack",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertDetails.js": {
      "path": "src/components/concerts/ConcertDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "ConcertDetailsWithRoles.js": {
      "path": "src/components/concerts/ConcertDetailsWithRoles.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onProps"
      ],
      "type": "details"
    },
    "ConcertInfoSection.js": {
      "path": "src/components/forms/public/ConcertInfoSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ConcertsList.js": {
      "path": "src/components/concerts/mobile/ConcertsList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "ConcertsTableView.js": {
      "path": "src/components/concerts/ConcertsTableView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onEdit",
        "onDelete",
        "onChange",
        "onRowClick",
        "onSort"
      ],
      "type": "table"
    },
    "DatesList.js": {
      "path": "src/components/concerts/DatesList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onRowClick"
      ],
      "type": "list"
    },
    "PublicationsList.js": {
      "path": "src/components/concerts/PublicationsList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onRowClick"
      ],
      "type": "list"
    },
    "ConcertArtistSection.js": {
      "path": "src/components/concerts/desktop/ConcertArtistSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertForm.js": {
      "path": "src/components/concerts/mobile/ConcertForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "ConcertGeneralInfo.js": {
      "path": "src/components/concerts/desktop/ConcertGeneralInfo.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ConcertHeader.js": {
      "path": "src/components/concerts/desktop/ConcertHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertLocationSection.js": {
      "path": "src/components/concerts/desktop/ConcertLocationSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertOrganizerSection.js": {
      "path": "src/components/concerts/desktop/ConcertOrganizerSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertStructureSection.js": {
      "path": "src/components/concerts/desktop/ConcertStructureSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertView.js": {
      "path": "src/components/concerts/mobile/ConcertView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onEdit",
        "onDelete",
        "onFormGenerated"
      ],
      "type": "component"
    },
    "ConcertLieuMap.js": {
      "path": "src/components/concerts/desktop/sections/ConcertLieuMap.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ConcertArtistSectionMobile.js": {
      "path": "src/components/concerts/mobile/sections/ConcertArtistSectionMobile.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertGeneralInfoMobile.js": {
      "path": "src/components/concerts/mobile/sections/ConcertGeneralInfoMobile.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ConcertHeaderMobile.js": {
      "path": "src/components/concerts/mobile/sections/ConcertHeaderMobile.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ConcertLocationSectionMobile.js": {
      "path": "src/components/concerts/mobile/sections/ConcertLocationSectionMobile.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertOrganizerSectionMobile.js": {
      "path": "src/components/concerts/mobile/sections/ConcertOrganizerSectionMobile.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteSearchSection.js": {
      "path": "src/components/concerts/sections/ArtisteSearchSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRemove",
        "onClick",
        "onSelect",
        "onCreate",
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteSearchSectionWithFallback.js": {
      "path": "src/components/concerts/sections/ArtisteSearchSectionWithFallback.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onRemove",
        "onSearch",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertActions.js": {
      "path": "src/components/concerts/sections/ConcertActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertFormActions.js": {
      "path": "src/components/concerts/sections/ConcertFormActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "ConcertFormHeader.js": {
      "path": "src/components/concerts/sections/ConcertFormHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onDelete",
        "onCancel"
      ],
      "type": "form"
    },
    "ConcertSearchBar.js": {
      "path": "src/components/concerts/sections/ConcertSearchBar.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertStatusBadge.js": {
      "path": "src/components/concerts/sections/ConcertStatusBadge.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ConcertsEmptyState.js": {
      "path": "src/components/concerts/sections/ConcertsEmptyState.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ConcertsListHeader.js": {
      "path": "src/components/concerts/sections/ConcertsListHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "list"
    },
    "ConcertsLoadMore.js": {
      "path": "src/components/concerts/sections/ConcertsLoadMore.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ConcertsStatsCards.js": {
      "path": "src/components/concerts/sections/ConcertsStatsCards.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "stats"
    },
    "ConcertsTable.js": {
      "path": "src/components/concerts/sections/ConcertsTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onVariant",
        "onSort",
        "onRowClick"
      ],
      "type": "table"
    },
    "LieuSearchSection.js": {
      "path": "src/components/concerts/sections/LieuSearchSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRemove",
        "onClick",
        "onSelect",
        "onCreate",
        "onClick"
      ],
      "type": "component"
    },
    "NotesSection.js": {
      "path": "src/components/concerts/sections/NotesSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "SearchDropdown.js": {
      "path": "src/components/concerts/sections/SearchDropdown.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onFocus",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "SelectedEntityCard.js": {
      "path": "src/components/concerts/sections/SelectedEntityCard.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "stats"
    },
    "MessagerieManager.js": {
      "path": "src/components/contact/parametrage/MessagerieManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClose",
        "onClick",
        "onClick",
        "onChange",
        "onHide",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "MessagesTachesManager.js": {
      "path": "src/components/contact/parametrage/MessagesTachesManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClose",
        "onClick",
        "onClick",
        "onChange",
        "onHide",
        "onClick",
        "onClick",
        "onHide",
        "onClick"
      ],
      "type": "component"
    },
    "QualificationsManager.js": {
      "path": "src/components/contact/parametrage/QualificationsManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onInput",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TagsManager.js": {
      "path": "src/components/contact/parametrage/TagsManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useTabs"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactDatesTable.js": {
      "path": "src/components/contacts/ContactDatesTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onDelete",
        "onEdit"
      ],
      "type": "table"
    },
    "ContactDetails.js": {
      "path": "src/components/contacts/mobile/ContactDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "ContactEntityTable.js": {
      "path": "src/components/contacts/ContactEntityTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "table"
    },
    "ContactFacturesTable.js": {
      "path": "src/components/contacts/ContactFacturesTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "factureService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onDelete"
      ],
      "type": "table"
    },
    "ContactFestivalsTable.js": {
      "path": "src/components/contacts/ContactFestivalsTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onEdit",
        "onHide"
      ],
      "type": "table"
    },
    "ContactFormUnified.js": {
      "path": "src/components/contacts/ContactFormUnified.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onClick",
        "onClick",
        "onHide",
        "onConfirm"
      ],
      "type": "form"
    },
    "ContactTypeSelector.js": {
      "path": "src/components/contacts/ContactTypeSelector.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactViewTabs.js": {
      "path": "src/components/contacts/ContactViewTabs.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs",
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "contacts/personnesService",
        "concertService",
        "preContratService"
      ],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRemoveTag",
        "onEditPerson",
        "onDissociatePerson",
        "onOpenPersonFiche",
        "onAddCommentToPerson",
        "onEditStructure",
        "onOpenStructureFiche",
        "onAddCommentToStructure",
        "onTogglePrioritaire",
        "onToggleActif",
        "onDeleteComment",
        "onTab",
        "onDatesUpdate",
        "onHide",
        "onTagsChange",
        "onClose",
        "onAssociate",
        "onIds",
        "onHide",
        "onCreated",
        "onHide",
        "onAddComment"
      ],
      "type": "component"
    },
    "ContactsList.js": {
      "path": "src/components/contacts/mobile/ContactsList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "ContactsListFiltered.js": {
      "path": "src/components/contacts/ContactsListFiltered.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "EchangeForm.js": {
      "path": "src/components/contacts/EchangeForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "historiqueEchangesService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "form"
    },
    "EchangeItem.js": {
      "path": "src/components/contacts/EchangeItem.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "historiqueEchangesService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "FestivalCreationModal.js": {
      "path": "src/components/contacts/FestivalCreationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onHide",
        "onSelect",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "HistoriqueEchanges.js": {
      "path": "src/components/contacts/HistoriqueEchanges.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onChange",
        "onClick",
        "onEdit",
        "onDelete",
        "onMarkCompleted",
        "onSetRappel",
        "onClose",
        "onSubmit",
        "onCancel",
        "onClose",
        "onSubmit",
        "onCancel"
      ],
      "type": "component"
    },
    "ContactConcertsSection.js": {
      "path": "src/components/contacts/sections/ContactConcertsSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactForm.js": {
      "path": "src/components/contacts/mobile/ContactForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onComplete",
        "onCancel"
      ],
      "type": "form"
    },
    "ContactView.js": {
      "path": "src/components/contacts/mobile/ContactView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactNotesSection.js": {
      "path": "src/components/contacts/desktop/sections/ContactNotesSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "ContactsListEmptyState.js": {
      "path": "src/components/contacts/desktop/sections/ContactsListEmptyState.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "ContactsListHeader.js": {
      "path": "src/components/contacts/desktop/sections/ContactsListHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "ContactsListSearchFilter.js": {
      "path": "src/components/contacts/desktop/sections/ContactsListSearchFilter.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "list"
    },
    "ContactsStatsCards.js": {
      "path": "src/components/contacts/desktop/sections/ContactsStatsCards.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "stats"
    },
    "ContactModalsContainer.js": {
      "path": "src/components/contacts/modal/ContactModalsContainer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onCreated",
        "onHide",
        "onCreated",
        "onHide",
        "onSave"
      ],
      "type": "modal"
    },
    "PersonneCreationModal.js": {
      "path": "src/components/contacts/modal/PersonneCreationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth"
      ],
      "services": [
        "contacts/personnesService",
        "contacts/liaisonsService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData",
        "onChange",
        "onAddressSelected",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onHide",
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onSelect",
        "onClick"
      ],
      "type": "modal"
    },
    "StructureCreationModal.js": {
      "path": "src/components/contacts/modal/StructureCreationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth"
      ],
      "services": [
        "contacts/structuresService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onAddressSelected",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onHide",
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onSelect",
        "onClick"
      ],
      "type": "modal"
    },
    "ContactBottomTabs.js": {
      "path": "src/components/contacts/sections/ContactBottomTabs.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onAddClick",
        "onDeleteSuccess",
        "onUpdateContrat"
      ],
      "type": "component"
    },
    "ContactCommentsSection.js": {
      "path": "src/components/contacts/sections/ContactCommentsSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ContactDiffusionSection.js": {
      "path": "src/components/contacts/sections/ContactDiffusionSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ContactInfoSection.js": {
      "path": "src/components/contacts/sections/ContactInfoSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContactPersonneSection.js": {
      "path": "src/components/contacts/sections/ContactPersonneSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ContactPersonsSection.js": {
      "path": "src/components/contacts/sections/ContactPersonsSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactQualificationSection.js": {
      "path": "src/components/contacts/sections/ContactQualificationSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ContactSalleSection.js": {
      "path": "src/components/contacts/sections/ContactSalleSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ContactStructureSection.js": {
      "path": "src/components/contacts/sections/ContactStructureSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ContactTagsSection.js": {
      "path": "src/components/contacts/sections/ContactTagsSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "StructureSearchSection.js": {
      "path": "src/components/contacts/sections/StructureSearchSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRemove",
        "onSelectResult",
        "onCreateNew",
        "onClick"
      ],
      "type": "component"
    },
    "ContratGenerator.js": {
      "path": "src/components/contrats/mobile/ContratGenerator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContratTemplateEditor.js": {
      "path": "src/components/contrats/ContratTemplateEditor.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContratTemplateEditorModal.js": {
      "path": "src/components/contrats/ContratTemplateEditorModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onSave",
        "onClose"
      ],
      "type": "modal"
    },
    "ContratTemplateEditorSimple.js": {
      "path": "src/components/contrats/ContratTemplateEditorSimple.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClose",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange"
      ],
      "type": "component"
    },
    "ContratVariable.js": {
      "path": "src/components/contrats/mobile/ContratVariable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "QuillCustomSizes.js": {
      "path": "src/components/contrats/QuillCustomSizes.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "QuillLineHeight.js": {
      "path": "src/components/contrats/QuillLineHeight.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContratGeneratorNew.js": {
      "path": "src/components/contrats/desktop/ContratGeneratorNew.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs",
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "contratService",
        "devisService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "CollapsibleSection.js": {
      "path": "src/components/contrats/desktop/sections/CollapsibleSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onCollapseToggle"
      ],
      "type": "component"
    },
    "ContratAlerts.js": {
      "path": "src/components/contrats/desktop/sections/ContratAlerts.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onDismiss",
        "onDismiss"
      ],
      "type": "component"
    },
    "ContratDebugPanel.js": {
      "path": "src/components/contrats/desktop/sections/ContratDebugPanel.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContratGenerationActions.js": {
      "path": "src/components/contrats/desktop/sections/ContratGenerationActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onBlur",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContratLoadingSpinner.js": {
      "path": "src/components/contrats/desktop/sections/ContratLoadingSpinner.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContratNoTemplates.js": {
      "path": "src/components/contrats/desktop/sections/ContratNoTemplates.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContratTemplatePreview.js": {
      "path": "src/components/contrats/desktop/sections/ContratTemplatePreview.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onKeyDown"
      ],
      "type": "component"
    },
    "ContratTemplateSelector.js": {
      "path": "src/components/contrats/desktop/sections/ContratTemplateSelector.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "UserGuide.js": {
      "path": "src/components/contrats/desktop/sections/UserGuide.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "VariablesPanel.js": {
      "path": "src/components/contrats/desktop/sections/VariablesPanel.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContratModelsModal.js": {
      "path": "src/components/contrats/modals/ContratModelsModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "ContratActions.js": {
      "path": "src/components/contrats/sections/ContratActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContratHeader.js": {
      "path": "src/components/contrats/sections/ContratHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContratInfoCard.js": {
      "path": "src/components/contrats/sections/ContratInfoCard.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "stats"
    },
    "ContratPdfTabs.js": {
      "path": "src/components/contrats/sections/ContratPdfTabs.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContratPdfViewer.js": {
      "path": "src/components/contrats/sections/ContratPdfViewer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ContratVariablesCard.js": {
      "path": "src/components/contrats/sections/ContratVariablesCard.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "stats"
    },
    "ContratsTableNew.js": {
      "path": "src/components/contrats/sections/ContratsTableNew.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "contratService"
      ],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onRowClick",
        "onClick",
        "onClick"
      ],
      "type": "table"
    },
    "DatesTable.js": {
      "path": "src/components/dates/DatesTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onRowClick"
      ],
      "type": "table"
    },
    "publicationConfig.js": {
      "path": "src/components/dates/configs/publicationConfig.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onConfig"
      ],
      "type": "component"
    },
    "ArtisteFirestoreDiagnostic.js": {
      "path": "src/components/debug/ArtisteFirestoreDiagnostic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [
        "query",
        "getDocs",
        "where",
        "orderBy"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteOrganizationMatcher.js": {
      "path": "src/components/debug/ArtisteOrganizationMatcher.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onInfo",
        "onChange",
        "onKeyPress",
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteSearchDebug.js": {
      "path": "src/components/debug/ArtisteSearchDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 7,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ArtisteSearchLiveDebug.js": {
      "path": "src/components/debug/ArtisteSearchLiveDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onKeyPress",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "BidirectionalRelationsFixer.js": {
      "path": "src/components/debug/BidirectionalRelationsFixer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "BrevoDiagnostic.js": {
      "path": "src/components/debug/BrevoDiagnostic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 9,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "BrevoKeyDiagnostic.js": {
      "path": "src/components/debug/BrevoKeyDiagnostic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "BrevoKeyRecovery.js": {
      "path": "src/components/debug/BrevoKeyRecovery.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "BrevoTemplateCreator.js": {
      "path": "src/components/debug/BrevoTemplateCreator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 6,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "BrevoTemplateCustomizer.js": {
      "path": "src/components/debug/BrevoTemplateCustomizer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "CheckStructureMigration.js": {
      "path": "src/components/debug/CheckStructureMigration.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onReport",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "CleanOldContractContent.js": {
      "path": "src/components/debug/CleanOldContractContent.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "ConcertContactsDebug.js": {
      "path": "src/components/debug/ConcertContactsDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "where",
        "query",
        "getDocs"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ConcertLieuDebug.js": {
      "path": "src/components/debug/ConcertLieuDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContactCreationTester.js": {
      "path": "src/components/debug/ContactCreationTester.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactEmailDebug.js": {
      "path": "src/components/debug/ContactEmailDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "ContactMigrationTool.js": {
      "path": "src/components/debug/ContactMigrationTool.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChecks",
        "onClick"
      ],
      "type": "component"
    },
    "ContactsAuditTool.js": {
      "path": "src/components/debug/ContactsAuditTool.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactsFixTool.js": {
      "path": "src/components/debug/ContactsFixTool.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactsMigrationDiagnostic.js": {
      "path": "src/components/debug/ContactsMigrationDiagnostic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ContactsMigrationFinal.js": {
      "path": "src/components/debug/ContactsMigrationFinal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "DataStructureFixer.js": {
      "path": "src/components/debug/DataStructureFixer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "DebugController.js": {
      "path": "src/components/debug/DebugController.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClose"
      ],
      "type": "component"
    },
    "EntityCreationTester.js": {
      "path": "src/components/debug/EntityCreationTester.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "EntityRelationsDebugger.js": {
      "path": "src/components/debug/EntityRelationsDebugger.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "FestitestContactFinder.js": {
      "path": "src/components/debug/FestitestContactFinder.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "FestivalsDebugger.js": {
      "path": "src/components/debug/FestivalsDebugger.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "orderBy",
        "getDoc"
      ],
      "stateVariables": 8,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "GenericDetailViewTest.js": {
      "path": "src/components/debug/GenericDetailViewTest.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "HybridFormatNormalizer.js": {
      "path": "src/components/debug/HybridFormatNormalizer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "LieuMapDebug.js": {
      "path": "src/components/debug/LieuMapDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ListDebugger.js": {
      "path": "src/components/debug/ListDebugger.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs",
        "query",
        "where"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "list"
    },
    "MigrateContractTemplates.js": {
      "path": "src/components/debug/MigrateContractTemplates.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "MigrateContractVariables.js": {
      "path": "src/components/debug/MigrateContractVariables.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "OrganizationContextDiagnostic.js": {
      "path": "src/components/debug/OrganizationContextDiagnostic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "OrganizationIdDebug.js": {
      "path": "src/components/debug/OrganizationIdDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onMouseDown",
        "onClick",
        "onMouseDown",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "OrganizationIdFixer.js": {
      "path": "src/debug/OrganizationIdFixer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "OrganizationIdTest.js": {
      "path": "src/debug/OrganizationIdTest.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "OrphanArtistesDebug.js": {
      "path": "src/components/debug/OrphanArtistesDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ParametresMigration.js": {
      "path": "src/components/debug/ParametresMigration.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "QuickContactCreator.js": {
      "path": "src/components/debug/QuickContactCreator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "RIBDebugger.js": {
      "path": "src/components/debug/RIBDebugger.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "RelationalMigrationFixer.js": {
      "path": "src/components/debug/RelationalMigrationFixer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs",
        "query",
        "where"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "SophieMadetMigration.js": {
      "path": "src/components/debug/SophieMadetMigration.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "StructureAddressMigration.js": {
      "path": "src/components/debug/StructureAddressMigration.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "StructuresClickDebug.js": {
      "path": "src/components/debug/StructuresClickDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onMouseEnter",
        "onMouseLeave"
      ],
      "type": "component"
    },
    "SystemAuditTool.js": {
      "path": "src/components/debug/SystemAuditTool.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TagsHierarchyDebug.js": {
      "path": "src/components/debug/TagsHierarchyDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "TestDataButton.js": {
      "path": "src/components/debug/TestDataButton.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "testDataServiceSimple"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onToggle",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TestDeleteContactDebug.js": {
      "path": "src/components/debug/TestDeleteContactDebug.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "contacts/structuresService",
        "contacts/personnesService"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TestFormButton.js": {
      "path": "src/components/debug/TestFormButton.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "form"
    },
    "TestWorkflowButton.js": {
      "path": "src/components/debug/TestWorkflowButton.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onToggle",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TestWorkflowButton2.js": {
      "path": "src/components/debug/TestWorkflowButton2.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onToggle",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "UnifiedContactSelectorTest.js": {
      "path": "src/components/debug/UnifiedContactSelectorTest.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "UnusedFilesAnalyzer.js": {
      "path": "src/components/debug/UnusedFilesAnalyzer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "DevisEditor.js": {
      "path": "src/components/devis/DevisEditor.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth",
        "useTabs"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "devisService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onCalculateTotals",
        "onHide",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "DevisForm.js": {
      "path": "src/components/devis/DevisForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth"
      ],
      "services": [
        "structureService",
        "projetService",
        "contactService",
        "collaborateurService"
      ],
      "dataFetching": [],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onHide",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "DevisList.js": {
      "path": "src/components/devis/DevisList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useTabs"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "list"
    },
    "DevisPreview.js": {
      "path": "src/components/devis/DevisPreview.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "DevisTable.js": {
      "path": "src/components/devis/sections/DevisTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [
        "devisService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onRowClick",
        "onClick",
        "onClick"
      ],
      "type": "table"
    },
    "FactureEditor.js": {
      "path": "src/components/factures/FactureEditor.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "FactureParametersEditor.js": {
      "path": "src/components/factures/FactureParametersEditor.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "factureService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "FacturePreview.js": {
      "path": "src/components/factures/FacturePreview.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "FactureTemplateEditor.js": {
      "path": "src/components/factures/FactureTemplateEditor.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "factureService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange"
      ],
      "type": "component"
    },
    "FactureTemplateEditorModal.js": {
      "path": "src/components/factures/FactureTemplateEditorModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onSave",
        "onClose"
      ],
      "type": "modal"
    },
    "FacturesTableView.js": {
      "path": "src/components/factures/FacturesTableView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onAction",
        "onChange",
        "onChange",
        "onChange",
        "onSort"
      ],
      "type": "table"
    },
    "FestivalsTableView.js": {
      "path": "src/components/festivals/FestivalsTableView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "table"
    },
    "FormGenerator.js": {
      "path": "src/components/forms/FormGenerator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "brevoTemplateService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 6,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "PublicContactForm.js": {
      "path": "src/components/forms/PublicContactForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData",
        "onSubmit",
        "onFormFill",
        "onChange",
        "onChange",
        "onAddressSelected",
        "onChange",
        "onChange",
        "onChange",
        "onBlur",
        "onClick",
        "onMouseEnter",
        "onMouseLeave",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "form"
    },
    "FormHeader.js": {
      "path": "src/components/ui/FormHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "ValidationActionBar.js": {
      "path": "src/components/forms/validation/ValidationActionBar.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "ValidationModal.js": {
      "path": "src/components/forms/validation/ValidationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "ValidationSection.js": {
      "path": "src/components/forms/validation/ValidationSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onCopyValue",
        "onValueChange"
      ],
      "type": "component"
    },
    "ValidationSummary.js": {
      "path": "src/components/forms/validation/ValidationSummary.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "AdminFormValidation.js": {
      "path": "src/components/forms/public/AdminFormValidation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onButton",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "FormContentWrapper.js": {
      "path": "src/components/forms/public/FormContentWrapper.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "FormErrorPanel.js": {
      "path": "src/components/forms/public/FormErrorPanel.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "FormLoadingState.js": {
      "path": "src/components/forms/public/FormLoadingState.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "FormPageHeader.js": {
      "path": "src/components/forms/public/FormPageHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "FormSubmitBlock.js": {
      "path": "src/components/forms/public/FormSubmitBlock.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "form"
    },
    "PreContratFormContainer.js": {
      "path": "src/components/forms/public/PreContratFormContainer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "preContratService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onButton",
        "onClick",
        "onButton",
        "onClick",
        "onClick",
        "onData",
        "onSubmit"
      ],
      "type": "form"
    },
    "PreContratFormPublic.js": {
      "path": "src/components/forms/public/PreContratFormPublic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "PublicFormContainer.js": {
      "path": "src/components/forms/public/PublicFormContainer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onButton",
        "onClick"
      ],
      "type": "form"
    },
    "FieldValidationRow.js": {
      "path": "src/components/forms/validation/FieldValidationRow.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange"
      ],
      "type": "component"
    },
    "Sidebar.js": {
      "path": "src/components/layout/Sidebar.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "SidebarItem.js": {
      "path": "src/components/layout/SidebarItem.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "LieuDetails.js": {
      "path": "src/components/lieux/LieuDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "LieuForm.js": {
      "path": "src/components/lieux/desktop/LieuForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onSave",
        "onDelete",
        "onChange",
        "onChange",
        "onHide",
        "onConfirm"
      ],
      "type": "form"
    },
    "LieuMapSection.js": {
      "path": "src/components/lieux/LieuMapSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "LieuxList.js": {
      "path": "src/components/lieux/desktop/LieuxList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onDeleteLieu"
      ],
      "type": "list"
    },
    "LieuView.js": {
      "path": "src/components/lieux/mobile/LieuView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "LieuAddressInputSection.js": {
      "path": "src/components/lieux/desktop/sections/LieuAddressInputSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onAddressSelected",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "LieuFormHeader.js": {
      "path": "src/components/lieux/desktop/sections/LieuFormHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "LieuGeneralInfo.js": {
      "path": "src/components/lieux/desktop/sections/LieuGeneralInfo.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "LieuHeader.js": {
      "path": "src/components/lieux/desktop/sections/LieuHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "LieuxListEmptyState.js": {
      "path": "src/components/lieux/desktop/sections/LieuxListEmptyState.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "list"
    },
    "LieuxListHeader.js": {
      "path": "src/components/lieux/desktop/sections/LieuxListHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "LieuxListSearchFilter.js": {
      "path": "src/components/lieux/desktop/sections/LieuxListSearchFilter.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "list"
    },
    "LieuxResultsTable.js": {
      "path": "src/components/lieux/desktop/sections/LieuxResultsTable.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onRowClick"
      ],
      "type": "table"
    },
    "LieuxStatsCards.js": {
      "path": "src/components/lieux/desktop/sections/LieuxStatsCards.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "stats"
    },
    "LieuMobileForm.js": {
      "path": "src/components/lieux/mobile/LieuMobileForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onConfirm"
      ],
      "type": "form"
    },
    "OnboardingFlow.js": {
      "path": "src/components/organization/OnboardingFlow.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onSubmit",
        "onChange"
      ],
      "type": "component"
    },
    "OrganizationSelector.js": {
      "path": "src/components/organization/OrganizationSelector.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onKeyDown",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onKeyDown",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "CollaborateursModal.js": {
      "path": "src/components/parametrage/CollaborateursModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "GroupeFormModal.js": {
      "path": "src/components/parametrage/GroupeFormModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onClose",
        "onChange",
        "onClick",
        "onChange",
        "onPermissionsChange",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "GroupesPermissionsManager.js": {
      "path": "src/components/parametrage/GroupesPermissionsManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onSaveGroupe",
        "onHide",
        "onSaveCollaborateurs"
      ],
      "type": "component"
    },
    "HorairesManager.js": {
      "path": "src/components/parametrage/HorairesManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "MentionsManager.js": {
      "path": "src/components/parametrage/MentionsManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "MetiersManager.js": {
      "path": "src/components/parametrage/MetiersManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ModeleContratContent.js": {
      "path": "src/components/parametrage/ModeleContratContent.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "orderBy",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onSort",
        "onClose",
        "onSave"
      ],
      "type": "component"
    },
    "ModelesFeuilleRouteManager.js": {
      "path": "src/components/parametrage/ModelesFeuilleRouteManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "MoyensTransportManager.js": {
      "path": "src/components/parametrage/MoyensTransportManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "PermissionsTree.js": {
      "path": "src/components/parametrage/PermissionsTree.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "RegimesManager.js": {
      "path": "src/components/parametrage/RegimesManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "RolesManager.js": {
      "path": "src/components/parametrage/RolesManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TvaManager.js": {
      "path": "src/components/parametrage/TvaManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TypesEvenementContent.js": {
      "path": "src/components/parametrage/TypesEvenementContent.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TypesSalleContent.js": {
      "path": "src/components/parametrage/TypesSalleContent.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "UnitesManager.js": {
      "path": "src/components/parametrage/UnitesManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ParametresApparence.js": {
      "path": "src/components/parametres/ParametresApparence.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ParametresCompte.js": {
      "path": "src/components/parametres/ParametresCompte.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ParametresEmail.js": {
      "path": "src/components/parametres/ParametresEmail.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "emailService"
      ],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onHide"
      ],
      "type": "component"
    },
    "ParametresEntreprise.js": {
      "path": "src/components/parametres/ParametresEntreprise.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit"
      ],
      "type": "component"
    },
    "ParametresExport.js": {
      "path": "src/components/parametres/ParametresExport.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onSubmit",
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "ParametresFactures.js": {
      "path": "src/components/parametres/ParametresFactures.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ParametresGeneraux.js": {
      "path": "src/components/parametres/ParametresGeneraux.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange"
      ],
      "type": "component"
    },
    "ParametresNotifications.js": {
      "path": "src/components/parametres/ParametresNotifications.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "ParametresOrganisations.js": {
      "path": "src/components/parametres/ParametresOrganisations.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ParametresEmail.test.js": {
      "path": "src/components/parametres/__tests__/ParametresEmail.test.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "emailService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "EntrepriseBankingFields.js": {
      "path": "src/components/parametres/sections/EntrepriseBankingFields.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "EntrepriseContactFields.js": {
      "path": "src/components/parametres/sections/EntrepriseContactFields.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "EntrepriseFormFields.js": {
      "path": "src/components/parametres/sections/EntrepriseFormFields.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onFocus",
        "onBlur",
        "onMouseDown",
        "onChange",
        "onChange"
      ],
      "type": "form"
    },
    "EntrepriseHeader.js": {
      "path": "src/components/parametres/sections/EntrepriseHeader.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "EntrepriseSearchOptions.js": {
      "path": "src/components/parametres/sections/EntrepriseSearchOptions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "EntrepriseSearchResults.js": {
      "path": "src/components/parametres/sections/EntrepriseSearchResults.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "EntrepriseSubmitActions.js": {
      "path": "src/components/parametres/sections/EntrepriseSubmitActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "SyncManager.js": {
      "path": "src/components/parametres/sync/SyncManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick"
      ],
      "type": "component"
    },
    "ContratPDFWrapper.js": {
      "path": "src/components/pdf/ContratPDFWrapper.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "pdfService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "PreContratGenerator.js": {
      "path": "src/components/precontrats/desktop/PreContratGenerator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useTabs"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "preContratService",
        "devisService"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 6,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "PreviewWrapper.js": {
      "path": "src/components/preview/PreviewWrapper.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "componentRegistry.js": {
      "path": "src/components/preview/componentRegistry.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ProjetCreationModal.js": {
      "path": "src/components/projets/modal/ProjetCreationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onChange",
        "onChange",
        "onHide",
        "onSubmit",
        "onSelect",
        "onClick"
      ],
      "type": "modal"
    },
    "StructureDetails.js": {
      "path": "src/components/structures/mobile/StructureDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "StructureViewTabs.js": {
      "path": "src/components/structures/StructureViewTabs.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs",
        "useAuth"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onTableProps",
        "onAddClick",
        "onAddClick",
        "onAddClick",
        "onAddClick",
        "onAddClick",
        "onAddClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "StructuresList.js": {
      "path": "src/components/structures/mobile/StructuresList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "useStructureDetails.js": {
      "path": "src/hooks/structures/useStructureDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [
        "getDoc",
        "where",
        "query",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "StructureForm.js": {
      "path": "src/components/structures/mobile/StructureForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "StructureLegalSection.js": {
      "path": "src/components/structures/desktop/StructureLegalSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "StructureView.js": {
      "path": "src/components/structures/desktop/StructureView.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "StructureBillingSection.js": {
      "path": "src/components/structures/desktop/sections/StructureBillingSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "StructureConcertsManagementSection.js": {
      "path": "src/components/structures/desktop/sections/StructureConcertsManagementSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "StructureContactsSection.js": {
      "path": "src/components/structures/desktop/sections/StructureContactsSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "StructureIdentitySection.js": {
      "path": "src/components/structures/desktop/sections/StructureIdentitySection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "StructureNotesSection.js": {
      "path": "src/components/structures/desktop/sections/StructureNotesSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "StructureSignataireSection.js": {
      "path": "src/components/structures/desktop/sections/StructureSignataireSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange"
      ],
      "type": "component"
    },
    "StructureSiretSearchSection.js": {
      "path": "src/components/structures/desktop/sections/StructureSiretSearchSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "utils.js": {
      "path": "src/components/structures/desktop/utils.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "TabManager.js": {
      "path": "src/components/tabs/TabManager.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "TabManagerProduction.js": {
      "path": "src/components/tabs/TabManagerProduction.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onContextMenu",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ActionButtons.js": {
      "path": "src/components/ui/ActionButtons.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "AddButton.js": {
      "path": "src/components/ui/AddButton.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "AddressInput.js": {
      "path": "src/components/ui/AddressInput.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onMouseDown"
      ],
      "type": "component"
    },
    "Alert.js": {
      "path": "src/components/ui/Alert.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "AssociatePersonModal.js": {
      "path": "src/components/ui/AssociatePersonModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useTabs"
      ],
      "services": [
        "contacts/personnesService"
      ],
      "dataFetching": [],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "Badge.js": {
      "path": "src/components/ui/Badge.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "Button.js": {
      "path": "src/components/ui/Button.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "Card.js": {
      "path": "src/components/ui/Card.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "stats"
    },
    "CardSection.js": {
      "path": "src/components/ui/CardSection.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onCollapseToggle"
      ],
      "type": "stats"
    },
    "ConfirmationModal.js": {
      "path": "src/components/ui/ConfirmationModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onHide",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "EntityCard.js": {
      "path": "src/components/ui/EntityCard.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onKeyDown",
        "onClick"
      ],
      "type": "stats"
    },
    "EntityEmptyState.js": {
      "path": "src/components/ui/EntityEmptyState.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "EntitySelector.js": {
      "path": "src/components/ui/EntitySelector.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "where",
        "query",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "component"
    },
    "ErrorMessage.js": {
      "path": "src/components/ui/ErrorMessage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "FlexContainer.js": {
      "path": "src/components/ui/FlexContainer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "Form.js": {
      "path": "src/components/ui/Form.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSubmit"
      ],
      "type": "form"
    },
    "FormField.js": {
      "path": "src/components/ui/FormField.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "ListWithFilters.js": {
      "path": "src/components/ui/ListWithFilters.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "where",
        "query",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "list"
    },
    "LoadingSpinner.js": {
      "path": "src/components/ui/LoadingSpinner.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "SectionTitle.js": {
      "path": "src/components/ui/SectionTitle.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "SectionWithBubbleTitle.js": {
      "path": "src/components/ui/SectionWithBubbleTitle.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "StatsCards.js": {
      "path": "src/components/ui/StatsCards.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "stats"
    },
    "StatusBadge.js": {
      "path": "src/components/ui/StatusBadge.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "StatutBadge.js": {
      "path": "src/components/ui/StatutBadge.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "Table.js": {
      "path": "src/components/ui/Table.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "table"
    },
    "TagsInput.js": {
      "path": "src/components/ui/TagsInput.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onHide",
        "onTagsChange"
      ],
      "type": "component"
    },
    "TagsSelectionModal.js": {
      "path": "src/components/ui/TagsSelectionModal.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "modal"
    },
    "entityConfigurations.js": {
      "path": "src/config/entityConfigurations.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "sidebarConfig.js": {
      "path": "src/config/sidebarConfig.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "tagsConfig.js": {
      "path": "src/config/tagsConfig.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "tagsHierarchy.js": {
      "path": "src/config/tagsHierarchy.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "config.js": {
      "path": "src/config.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "AuthContext.js": {
      "path": "src/context/AuthContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "context"
    },
    "ContactModalsContext.js": {
      "path": "src/context/ContactModalsContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "modal"
    },
    "ModalContext.js": {
      "path": "src/context/ModalContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClose"
      ],
      "type": "modal"
    },
    "ModalsContext.js": {
      "path": "src/context/ModalsContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "modal"
    },
    "OrganizationContext.js": {
      "path": "src/context/OrganizationContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext",
        "useAuth"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "context"
    },
    "ParametresContext.js": {
      "path": "src/context/ParametresContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext",
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData"
      ],
      "type": "context"
    },
    "TabsContext.js": {
      "path": "src/context/TabsContext.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useContext"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "context"
    },
    "useDeleteArtiste.js": {
      "path": "src/hooks/artistes/useDeleteArtiste.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useSearchAndFilter.js": {
      "path": "src/hooks/search/useSearchAndFilter.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useAddressSearch.js": {
      "path": "src/hooks/lieux/useAddressSearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useCache.js": {
      "path": "src/hooks/common/useCache.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "cacheService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useCompanySearch.js": {
      "path": "src/hooks/contacts/useCompanySearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useDebounce.js": {
      "path": "src/hooks/common/useDebounce.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useEntitySearch.js": {
      "path": "src/hooks/concerts/useEntitySearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useFirestoreSubscription.js": {
      "path": "src/hooks/common/useFirestoreSubscription.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "onSnapshot"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useFormSubmission.js": {
      "path": "src/hooks/forms/useFormSubmission.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useGenericEntityDelete.js": {
      "path": "src/hooks/common/useGenericEntityDelete.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "where",
        "query",
        "getDocs"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericEntityDetails.js": {
      "path": "src/hooks/common/useGenericEntityDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "InstanceTracker"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 7,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "useGenericEntityForm.js": {
      "path": "src/hooks/generics/forms/useGenericEntityForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRules",
        "onResult",
        "onResult",
        "onResult"
      ],
      "type": "form"
    },
    "useGenericEntitySearch.js": {
      "path": "src/hooks/common/useGenericEntitySearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useLocationIQ.js": {
      "path": "src/hooks/common/useLocationIQ.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useResponsive.js": {
      "path": "src/hooks/common/useResponsive.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useSafeRelations.js": {
      "path": "src/hooks/common/useSafeRelations.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useConcertActions.js": {
      "path": "src/hooks/concerts/useConcertActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useConcertAssociations.js": {
      "path": "src/hooks/concerts/useConcertAssociations.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useConcertDelete.js": {
      "path": "src/hooks/concerts/useConcertDelete.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useConcertDetails.js": {
      "path": "src/hooks/concerts/useConcertDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "useConcertDetailsWithRoles.js": {
      "path": "src/hooks/concerts/useConcertDetailsWithRoles.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "useConcertForm.js": {
      "path": "src/hooks/concerts/useConcertForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "bidirectionalRelationsService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useConcertFormWithRelations.js": {
      "path": "src/hooks/concerts/useConcertFormWithRelations.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useConcertFormsManagement.js": {
      "path": "src/hooks/concerts/useConcertFormsManagement.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useConcertListData.js": {
      "path": "src/hooks/concerts/useConcertListData.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "loggerService",
        "cacheService"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc",
        "orderBy"
      ],
      "stateVariables": 6,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "useConcertStatus.js": {
      "path": "src/hooks/concerts/useConcertStatus.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactActions.js": {
      "path": "src/hooks/contacts/useContactActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactActionsRelational.js": {
      "path": "src/hooks/contacts/useContactActionsRelational.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useTabs"
      ],
      "services": [
        "contacts/personnesService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactContrats.js": {
      "path": "src/hooks/contacts/useContactContrats.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactFactures.js": {
      "path": "src/hooks/contacts/useContactFactures.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactFestivals.js": {
      "path": "src/hooks/contacts/useContactFestivals.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "onSnapshot"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactSearch.js": {
      "path": "src/hooks/contacts/useContactSearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactSearchRelational.js": {
      "path": "src/hooks/contacts/useContactSearchRelational.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContactsRelational.js": {
      "path": "src/hooks/contacts/useContactsRelational.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "contacts/structuresService",
        "contacts/personnesService",
        "contacts/liaisonsService"
      ],
      "dataFetching": [
        "query",
        "where",
        "onSnapshot"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData"
      ],
      "type": "service"
    },
    "useDeleteContact.js": {
      "path": "src/hooks/contacts/useDeleteContact.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useDeleteContactRelational.js": {
      "path": "src/hooks/contacts/useDeleteContactRelational.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "contacts/structuresService",
        "contacts/personnesService"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useHistoriqueEchanges.js": {
      "path": "src/hooks/contacts/useHistoriqueEchanges.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "historiqueEchangesService"
      ],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useLieuSearch.js": {
      "path": "src/hooks/search/useLieuSearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useSimpleContactDetails.js": {
      "path": "src/hooks/contacts/useSimpleContactDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "where",
        "query",
        "getDocs"
      ],
      "stateVariables": 10,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "contractVariables.js": {
      "path": "src/hooks/contrats/contractVariables.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useContratActions.js": {
      "path": "src/hooks/contrats/useContratActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "brevoTemplateService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "useContratDetails.js": {
      "path": "src/hooks/contrats/useContratDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "useContratGenerator.js": {
      "path": "src/hooks/contrats/useContratGenerator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "orderBy",
        "getDocs",
        "getDoc",
        "where"
      ],
      "stateVariables": 8,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange"
      ],
      "type": "component"
    },
    "usePdfPreview.js": {
      "path": "src/hooks/contrats/usePdfPreview.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useFormTokenValidation.js": {
      "path": "src/hooks/forms/useFormTokenValidation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "preContratService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData"
      ],
      "type": "form"
    },
    "useFormValidation.js": {
      "path": "src/hooks/forms/useFormValidation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSchema"
      ],
      "type": "form"
    },
    "useFormValidationData.js": {
      "path": "src/hooks/forms/useFormValidationData.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 7,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useValidationBatchActions.js": {
      "path": "src/hooks/forms/useValidationBatchActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "structureService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericAction.js": {
      "path": "src/hooks/generics/actions/useGenericAction.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "where",
        "orderBy",
        "query",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onConfig"
      ],
      "type": "component"
    },
    "useGenericFieldActions.js": {
      "path": "src/hooks/generics/actions/useGenericFieldActions.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRules"
      ],
      "type": "component"
    },
    "useGenericDataFetcher.js": {
      "path": "src/hooks/generics/data/useGenericDataFetcher.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "where",
        "orderBy",
        "query",
        "getDoc",
        "getDocs",
        "onSnapshot"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericEntityList.js": {
      "path": "src/hooks/generics/lists/useGenericEntityList.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 8,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "list"
    },
    "useGenericFilteredSearch.js": {
      "path": "src/hooks/generics/search/useGenericFilteredSearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericSearch.js": {
      "path": "src/hooks/generics/search/useGenericSearch.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "query",
        "getDocs",
        "where",
        "orderBy"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericEntityStatus.js": {
      "path": "src/hooks/generics/status/useGenericEntityStatus.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericResponsive.js": {
      "path": "src/hooks/generics/utils/useGenericResponsive.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useGenericValidation.js": {
      "path": "src/hooks/generics/validation/useGenericValidation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onRules"
      ],
      "type": "component"
    },
    "useLieuDelete.js": {
      "path": "src/hooks/lieux/useLieuDelete.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useLieuDetails.js": {
      "path": "src/hooks/lieux/useLieuDetails.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [
        "getDoc",
        "where",
        "query",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "details"
    },
    "useLieuForm.js": {
      "path": "src/hooks/lieux/useLieuForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "bidirectionalRelationsService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useLieuxFilters.js": {
      "path": "src/hooks/lieux/useLieuxFilters.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useLieuxQuery.js": {
      "path": "src/hooks/lieux/useLieuxQuery.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useEntrepriseForm.js": {
      "path": "src/hooks/parametres/useEntrepriseForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useDeleteStructure.js": {
      "path": "src/hooks/structures/useDeleteStructure.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useStructureForm.js": {
      "path": "src/hooks/structures/useStructureForm.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "bidirectionalRelationsService"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "form"
    },
    "useStructureValidation.js": {
      "path": "src/hooks/structures/useStructureValidation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useTaches.js": {
      "path": "src/hooks/taches/useTaches.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "onSnapshot"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useMultiOrgQuery.js": {
      "path": "src/hooks/useMultiOrgQuery.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useOrganization",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "onSnapshot",
        "getDoc"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "useTabsSafe.js": {
      "path": "src/hooks/useTabsSafe.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "AdminParametragePage.js": {
      "path": "src/pages/AdminParametragePage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onTabChange",
        "onClick"
      ],
      "type": "page"
    },
    "ArtistesPage.js": {
      "path": "src/pages/ArtistesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "BookingParametragePage.js": {
      "path": "src/pages/BookingParametragePage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onTabChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onCreated",
        "onHide",
        "onCreated"
      ],
      "type": "page"
    },
    "CollaborationParametragePage.js": {
      "path": "src/pages/CollaborationParametragePage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "page"
    },
    "ComponentPreviewPage.js": {
      "path": "src/pages/ComponentPreviewPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "ConcertsPage.js": {
      "path": "src/pages/ConcertsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "ConfirmationPage.js": {
      "path": "src/pages/ConfirmationPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "preContratService",
        "tachesService",
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "ContactParametragePage.js": {
      "path": "src/pages/ContactParametragePage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onTabChange",
        "onClick"
      ],
      "type": "page"
    },
    "ContactTagsPage.js": {
      "path": "src/pages/ContactTagsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onLabel"
      ],
      "type": "page"
    },
    "ContactsPage.js": {
      "path": "src/pages/ContactsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "ContratDetailsPage.js": {
      "path": "src/pages/ContratDetailsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onPdfViewerToggle",
        "onSendContrat",
        "onMarkAsSigned",
        "onDownloadPdf",
        "onDeleteContrat",
        "onNavigateBack",
        "onViewFacture",
        "onGenerateFacture",
        "onTabSelect",
        "onGeneratePdf",
        "onGeneratePreview",
        "onHide",
        "onClick",
        "onClick"
      ],
      "type": "details"
    },
    "ContratGenerationNewPage.js": {
      "path": "src/pages/ContratGenerationNewPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "preContratService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 7,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "page"
    },
    "ContratGenerationPage.js": {
      "path": "src/pages/ContratGenerationPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "ContratRedactionPage.js": {
      "path": "src/pages/ContratRedactionPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "contratService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onInput",
        "onHide",
        "onValidate"
      ],
      "type": "page"
    },
    "ContratsPage.js": {
      "path": "src/pages/ContratsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "contratService"
      ],
      "dataFetching": [
        "query",
        "orderBy",
        "getDocs",
        "where"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onUpdateContrat"
      ],
      "type": "page"
    },
    "CreateDefaultTemplate.js": {
      "path": "src/pages/CreateDefaultTemplate.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "component"
    },
    "DashboardPage.js": {
      "path": "src/pages/DashboardPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "DateCreationPage.js": {
      "path": "src/pages/DateCreationPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useTabs"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onSubmit",
        "onChange",
        "onChange",
        "onFocus",
        "onClick",
        "onChange",
        "onFocus",
        "onClick",
        "onChange",
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "DateDetailsPage.js": {
      "path": "src/pages/DateDetailsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth",
        "useTabs"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs",
        "orderBy"
      ],
      "stateVariables": 4,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "details"
    },
    "DebugToolsPage.js": {
      "path": "src/pages/DebugToolsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSelect"
      ],
      "type": "page"
    },
    "DevisPage.js": {
      "path": "src/pages/DevisPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "FactureDetailsPage.js": {
      "path": "src/pages/FactureDetailsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "factureService",
        "pdfService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "details"
    },
    "FactureGeneratorPage.js": {
      "path": "src/pages/FactureGeneratorPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "contratService",
        "factureService"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onChange"
      ],
      "type": "page"
    },
    "FacturesPage.js": {
      "path": "src/pages/FacturesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "firebase-service",
        "factureService"
      ],
      "dataFetching": [
        "query",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onDelete"
      ],
      "type": "page"
    },
    "FestivalsDatesPage.js": {
      "path": "src/pages/FestivalsDatesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "onSnapshot"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onChange"
      ],
      "type": "page"
    },
    "FormResponsePage.js": {
      "path": "src/pages/FormResponsePage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onSubmitSuccess",
        "onClick",
        "onClick"
      ],
      "type": "form"
    },
    "InventairePagesPage.js": {
      "path": "src/pages/InventairePagesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 7,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onLoad",
        "onError",
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "LieuxPage.js": {
      "path": "src/pages/LieuxPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "LoginPage.js": {
      "path": "src/pages/LoginPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 5,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onSubmit",
        "onChange",
        "onInput",
        "onChange",
        "onInput",
        "onKeyDown",
        "onChange",
        "onInput",
        "onKeyDown",
        "onChange",
        "onInput",
        "onKeyDown"
      ],
      "type": "page"
    },
    "MesRecherchesPage.js": {
      "path": "src/pages/MesRecherchesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "MesSelectionsPage.js": {
      "path": "src/pages/MesSelectionsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "ParametresPage.js": {
      "path": "src/pages/ParametresPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onTabChange"
      ],
      "type": "page"
    },
    "PreContratFormResponsePage.js": {
      "path": "src/pages/PreContratFormResponsePage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "preContratService"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onName"
      ],
      "type": "form"
    },
    "PreContratGenerationPage.js": {
      "path": "src/pages/PreContratGenerationPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 6,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick"
      ],
      "type": "page"
    },
    "ProjetsPage.js": {
      "path": "src/pages/ProjetsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onCreated"
      ],
      "type": "page"
    },
    "PublicationsPage.js": {
      "path": "src/pages/PublicationsPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "SallesPage.js": {
      "path": "src/pages/SallesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onHide",
        "onSalleCreated"
      ],
      "type": "page"
    },
    "StructuresPage.js": {
      "path": "src/pages/StructuresPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "TableauDeBordPage.js": {
      "path": "src/pages/TableauDeBordPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useTabs",
        "useOrganization"
      ],
      "services": [
        "firebase-service",
        "preContratService",
        "contratService"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onClick",
        "onDelete",
        "onEdit"
      ],
      "type": "table"
    },
    "TabsTestPage.js": {
      "path": "src/pages/TabsTestPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "page"
    },
    "TachesPage.js": {
      "path": "src/pages/TachesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useOrganization",
        "useAuth"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 1,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onChange",
        "onChange",
        "onChange",
        "onClick",
        "onClick",
        "onChange",
        "onClick",
        "onClick",
        "onClick",
        "onClose",
        "onSubmit",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onChange",
        "onClick"
      ],
      "type": "page"
    },
    "MigrationPage.js": {
      "path": "src/pages/admin/MigrationPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [],
      "dataFetching": [],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onClick"
      ],
      "type": "page"
    },
    "contratTemplatesEditPage.js": {
      "path": "src/pages/contratTemplatesEditPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onSave",
        "onCancel"
      ],
      "type": "page"
    },
    "contratTemplatesPage.js": {
      "path": "src/pages/contratTemplatesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "orderBy",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClick",
        "onClick",
        "onSort",
        "onClick",
        "onClose",
        "onSave"
      ],
      "type": "page"
    },
    "factureTemplatesEditPage.js": {
      "path": "src/pages/factureTemplatesEditPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 2,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onSave",
        "onClose"
      ],
      "type": "page"
    },
    "factureTemplatesPage.js": {
      "path": "src/pages/factureTemplatesPage.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [
        "useAuth",
        "useOrganization"
      ],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 3,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onClick",
        "onClose",
        "onSave"
      ],
      "type": "page"
    },
    "reportWebVitals.js": {
      "path": "src/reportWebVitals.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "ContactRefactoredSchemas.js": {
      "path": "src/schemas/ContactRefactoredSchemas.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "migrateParametresToOrganization.js": {
      "path": "src/scripts/migrateParametresToOrganization.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "migrateToMultiOrg.js": {
      "path": "src/scripts/migrateToMultiOrg.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData",
        "onStats"
      ],
      "type": "component"
    },
    "InstanceTracker.js": {
      "path": "src/services/InstanceTracker.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "brevoTemplateService.test.js": {
      "path": "src/services/__tests__/brevoTemplateService.test.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "emailService.test.js": {
      "path": "src/services/__tests__/emailService.test.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "bidirectionalRelationsService.js": {
      "path": "src/services/bidirectionalRelationsService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "brevoTemplateService.js": {
      "path": "src/services/brevoTemplateService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onParams"
      ],
      "type": "service"
    },
    "cacheService.js": {
      "path": "src/services/cacheService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onCache",
        "onCache",
        "onStats"
      ],
      "type": "component"
    },
    "collaborateurService.js": {
      "path": "src/services/collaborateurService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "concertService.js": {
      "path": "src/services/concertService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "contactService.js": {
      "path": "src/services/contactService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "contactServiceRelational.js": {
      "path": "src/services/contactServiceRelational.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc",
        "orderBy"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "liaisonsService.js": {
      "path": "src/services/contacts/liaisonsService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc",
        "orderBy"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData"
      ],
      "type": "component"
    },
    "personnesService.js": {
      "path": "src/services/contacts/personnesService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "structuresService.js": {
      "path": "src/services/contacts/structuresService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc",
        "orderBy"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "contratService.js": {
      "path": "src/services/contratService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "tachesService"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "devisService.js": {
      "path": "src/services/devisService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service",
        "tachesService"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "orderBy",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "emailService.js": {
      "path": "src/services/emailService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "factureService.js": {
      "path": "src/services/factureService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "tachesService"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "firebase-emulator-service.js": {
      "path": "src/services/firebase-emulator-service.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDoc",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "firebase-service.js": {
      "path": "src/services/firebase-service.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDocs",
        "getDoc",
        "query",
        "where"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData"
      ],
      "type": "service"
    },
    "historiqueEchangesService.js": {
      "path": "src/services/historiqueEchangesService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "orderBy",
        "onSnapshot"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "loggerService.js": {
      "path": "src/services/loggerService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "pdfService.js": {
      "path": "src/services/pdfService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "preContratService.js": {
      "path": "src/services/preContratService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "tachesService"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "projetService.js": {
      "path": "src/services/projetService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "orderBy",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "structureService.js": {
      "path": "src/services/structureService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc",
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "tachesService.js": {
      "path": "src/services/tachesService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "testDataService.js": {
      "path": "src/services/testDataService.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "testDataServiceSimple.js": {
      "path": "src/services/testDataServiceSimple.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "setupTests.js": {
      "path": "src/setupTests.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "brevoTypes.js": {
      "path": "src/types/brevoTypes.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onTemplateVariables"
      ],
      "type": "component"
    },
    "FirebaseInterceptor.js": {
      "path": "src/utils/FirebaseInterceptor.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "where"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "RouterStabilizer.js": {
      "path": "src/utils/RouterStabilizer.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "autoMigrateRIB.js": {
      "path": "src/utils/autoMigrateRIB.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "concertsDiagnostic.js": {
      "path": "src/utils/concertsDiagnostic.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs",
        "query",
        "orderBy"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "contactUtils.js": {
      "path": "src/utils/contactUtils.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "createDefaultContractTemplate.js": {
      "path": "src/utils/createDefaultContractTemplate.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service",
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "cryptoUtils.js": {
      "path": "src/utils/cryptoUtils.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "dateUtils.js": {
      "path": "src/utils/dateUtils.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "debugTagsComments.js": {
      "path": "src/utils/debugTagsComments.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "diagnoseOrphanArtistes.js": {
      "path": "src/utils/diagnoseOrphanArtistes.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "firebaseDataUtils.js": {
      "path": "src/utils/firebaseDataUtils.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "fixArtistesOrganizationIds.js": {
      "path": "src/utils/fixArtistesOrganizationIds.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "fixBidirectionalRelationsBrowser.js": {
      "path": "src/utils/fixBidirectionalRelationsBrowser.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "query",
        "where",
        "getDocs",
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "fixNumeroIntracommunautaire.js": {
      "path": "src/utils/fixNumeroIntracommunautaire.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "fixOrganizationIds.js": {
      "path": "src/utils/fixOrganizationIds.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "formatters.js": {
      "path": "src/utils/formatters.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "idGenerators.js": {
      "path": "src/utils/idGenerators.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "logUtils.js": {
      "path": "src/utils/logUtils.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "migrateRIBData.js": {
      "path": "src/utils/migrateRIBData.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [
        "getDoc"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "migrationHelper.js": {
      "path": "src/utils/migrationHelper.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [
        "getDocs"
      ],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [
        "onData",
        "onStats"
      ],
      "type": "component"
    },
    "numberToWords.js": {
      "path": "src/utils/numberToWords.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "seedEmulator.js": {
      "path": "src/utils/seedEmulator.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [
        "firebase-service"
      ],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "templateVariables.js": {
      "path": "src/utils/templateVariables.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "terminologyMapping.js": {
      "path": "src/utils/terminologyMapping.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "service"
    },
    "toasts.js": {
      "path": "src/utils/toasts.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    },
    "validation.js": {
      "path": "src/utils/validation.js",
      "imports": [],
      "exports": [],
      "hooks": [],
      "contexts": [],
      "services": [],
      "dataFetching": [],
      "stateVariables": 0,
      "propsReceived": [],
      "propsPassed": [],
      "eventHandlers": [],
      "type": "component"
    }
  },
  "services": {},
  "contexts": {},
  "issues": [
    {
      "type": "too_many_services",
      "component": "ContratGeneratorNew.js",
      "count": 4,
      "services": [
        "firebase-service",
        "firebase-service",
        "contratService",
        "devisService"
      ],
      "severity": "warning"
    },
    {
      "type": "too_many_services",
      "component": "DevisForm.js",
      "count": 4,
      "services": [
        "structureService",
        "projetService",
        "contactService",
        "collaborateurService"
      ],
      "severity": "warning"
    },
    {
      "type": "too_many_services",
      "component": "PreContratGenerator.js",
      "count": 4,
      "services": [
        "firebase-service",
        "firebase-service",
        "preContratService",
        "devisService"
      ],
      "severity": "warning"
    },
    {
      "type": "too_many_services",
      "component": "useContactsRelational.js",
      "count": 4,
      "services": [
        "firebase-service",
        "contacts/structuresService",
        "contacts/personnesService",
        "contacts/liaisonsService"
      ],
      "severity": "warning"
    },
    {
      "type": "multiple_data_fetches",
      "component": "useGenericDataFetcher.js",
      "fetches": [
        "where",
        "orderBy",
        "query",
        "getDoc",
        "getDocs",
        "onSnapshot"
      ],
      "severity": "info"
    },
    {
      "type": "too_many_services",
      "component": "FactureDetailsPage.js",
      "count": 4,
      "services": [
        "firebase-service",
        "firebase-service",
        "factureService",
        "pdfService"
      ],
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ArtistesList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ArtistesListHeader.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "CommentListModal.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ConcertsList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "DatesList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "PublicationsList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ConcertsListHeader.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ContactsList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ContactsListFiltered.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ContactsListEmptyState.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ContactsListHeader.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ContactsListSearchFilter.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ListDebugger.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "DevisList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "LieuxList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "LieuxListEmptyState.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "LieuxListHeader.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "LieuxListSearchFilter.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "StructuresList.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "ListWithFilters.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "useConcertListData.js",
      "severity": "warning"
    },
    {
      "type": "no_pagination",
      "component": "useGenericEntityList.js",
      "severity": "warning"
    }
  ],
  "statistics": {
    "totalComponents": 525,
    "componentsByType": [
      {
        "type": "component",
        "count": 335
      },
      {
        "type": "context",
        "count": 5
      },
      {
        "type": "form",
        "count": 45
      },
      {
        "type": "list",
        "count": 22
      },
      {
        "type": "service",
        "count": 15
      },
      {
        "type": "modal",
        "count": 22
      },
      {
        "type": "stats",
        "count": 12
      },
      {
        "type": "table",
        "count": 15
      },
      {
        "type": "details",
        "count": 15
      },
      {
        "type": "page",
        "count": 39
      }
    ],
    "servicesUsed": [
      "emailService",
      "brevoTemplateService",
      "firebase-service",
      "contacts/personnesService",
      "factureService",
      "concertService",
      "preContratService",
      "historiqueEchangesService",
      "contacts/liaisonsService",
      "contacts/structuresService",
      "contratService",
      "devisService",
      "testDataServiceSimple",
      "structureService",
      "projetService",
      "contactService",
      "collaborateurService",
      "pdfService",
      "cacheService",
      "InstanceTracker",
      "bidirectionalRelationsService",
      "loggerService",
      "tachesService"
    ],
    "contextsUsed": [
      "useOrganization",
      "useAuth",
      "useTabs",
      "useContext"
    ],
    "averageStatePerComponent": 1
  }
}