/**
 * Script de test direct des Cloud Functions
 * Test les fonctions d√©ploy√©es sans interface
 */

const axios = require('axios');

// URLs des Cloud Functions d√©ploy√©es
const BASE_URL = 'https://us-central1-app-booking-26571.cloudfunctions.net';

// Test 1: Envoi email unifi√© (devrait fallback sur SMTP car pas de Brevo configur√©)
async function testUnifiedEmail() {
  try {
    console.log('üß™ Test sendUnifiedEmail (fallback SMTP)...');
    
    const emailData = {
      to: 'meltinrecordz@gmail.com',
      subject: 'Test Cloud Function - TourCraft',
      html: `
        <h2>‚úÖ Test Cloud Function R√©ussi !</h2>
        <p>Cette email confirme que vos Cloud Functions TourCraft fonctionnent.</p>
        <p><strong>Service utilis√© :</strong> Fallback SMTP (pas de Brevo configur√©)</p>
        <p><strong>Timestamp :</strong> ${new Date().toISOString()}</p>
        <hr>
        <p><small>Envoy√© via Cloud Function sendUnifiedEmail</small></p>
      `,
      userId: 'test-user',
      entrepriseId: 'test-org'
    };
    
    const response = await axios.post(`${BASE_URL}/sendUnifiedEmail`, emailData, {
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ sendUnifiedEmail r√©ussi !');
    console.log('üìß R√©sultat:', response.data);
    
  } catch (error) {
    console.error('‚ùå Erreur sendUnifiedEmail:', error.response?.data || error.message);
  }
}

// Test 2: Validation cl√© Brevo (devrait √©chouer avec cl√© bidon)
async function testBrevoValidation() {
  try {
    console.log('üîë Test validateBrevoKey...');
    
    const response = await axios.post(`${BASE_URL}/validateBrevoKey`, {
      apiKey: 'xkeysib-fake-key-for-testing'
    }, {
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    console.log('üìù R√©sultat validation:', response.data);
    
  } catch (error) {
    console.log('‚ö†Ô∏è Validation √©chou√©e (normal avec fausse cl√©):', error.response?.data?.error || error.message);
  }
}

// Test 3: Templates Brevo (devrait √©chouer sans vraie cl√©)
async function testBrevoTemplates() {
  try {
    console.log('üé® Test getBrevoTemplates...');
    
    const response = await axios.post(`${BASE_URL}/getBrevoTemplates`, {
      apiKey: 'xkeysib-fake-key-for-testing'
    }, {
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    console.log('üìã Templates trouv√©s:', response.data);
    
  } catch (error) {
    console.log('‚ö†Ô∏è Templates √©chou√©s (normal sans vraie cl√©):', error.response?.data?.error || error.message);
  }
}

// Lancement des tests
async function runAllTests() {
  console.log('üöÄ Test des Cloud Functions TourCraft\n');
  
  await testUnifiedEmail();
  console.log('');
  
  await testBrevoValidation();
  console.log('');
  
  await testBrevoTemplates();
  
  console.log('\n‚ú® Tests termin√©s !');
  console.log('üí° Pour tester avec vraie cl√© Brevo, utilisez l\'interface TourCraft');
}

runAllTests().catch(console.error);