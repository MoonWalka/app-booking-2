#!/bin/bash

# Audit complet du nettoyage des scripts
# V√©rifie qu'aucun script n'est mal plac√© ou orphelin

set -e

echo "üîç AUDIT POST-NETTOYAGE - V√©rification Scripts"
echo "================================================"

# Compteurs
TOTAL_SCRIPTS=0
ROOT_SCRIPTS=0
TOOLS_SCRIPTS=0
ORPHAN_SCRIPTS=0
SUSPICIOUS_SCRIPTS=0

echo "üìä 1. INVENTAIRE COMPLET DES SCRIPTS..."
echo "========================================"

# Chercher TOUS les scripts .sh dans le projet (hors node_modules)
echo "üîé Recherche de tous les fichiers .sh..."
ALL_SCRIPTS=$(find . -name "*.sh" -type f -not -path "./node_modules/*" -not -path "./.git/*" | sort)

echo "üìã Scripts trouv√©s:"
echo "$ALL_SCRIPTS" | nl

TOTAL_SCRIPTS=$(echo "$ALL_SCRIPTS" | wc -l | tr -d ' ')
echo ""
echo "üìä Total scripts trouv√©s: $TOTAL_SCRIPTS"

echo ""
echo "üìä 2. ANALYSE PAR LOCALISATION..."
echo "=================================="

# Scripts dans la racine
echo "üè† Scripts racine (acceptable: setup, config globaux):"
ROOT_LIST=$(find . -maxdepth 1 -name "*.sh" -type f | sort)
if [ -n "$ROOT_LIST" ]; then
    echo "$ROOT_LIST" | nl
    ROOT_SCRIPTS=$(echo "$ROOT_LIST" | wc -l | tr -d ' ')
else
    echo "   ‚úÖ Aucun script dans la racine"
    ROOT_SCRIPTS=0
fi

# Scripts dans tools/
echo ""
echo "üõ†Ô∏è  Scripts dans tools/ (attendu):"
TOOLS_LIST=$(find tools -name "*.sh" -type f 2>/dev/null | sort)
if [ -n "$TOOLS_LIST" ]; then
    echo "$TOOLS_LIST" | nl
    TOOLS_SCRIPTS=$(echo "$TOOLS_LIST" | wc -l | tr -d ' ')
else
    echo "   ‚ùå Aucun script dans tools/ (probl√®me!)"
    TOOLS_SCRIPTS=0
fi

# Scripts ailleurs (orphelins)
echo ""
echo "üö® Scripts orphelins (probl√©matiques):"
ORPHAN_LIST=$(find . -name "*.sh" -type f -not -path "./tools/*" -not -maxdepth 1 -not -path "./node_modules/*" -not -path "./.git/*" | sort)
if [ -n "$ORPHAN_LIST" ]; then
    echo "$ORPHAN_LIST" | nl
    ORPHAN_SCRIPTS=$(echo "$ORPHAN_LIST" | wc -l | tr -d ' ')
    echo "   ‚ö†Ô∏è  ATTENTION: Scripts trouv√©s hors tools/ et racine!"
else
    echo "   ‚úÖ Aucun script orphelin"
    ORPHAN_SCRIPTS=0
fi

echo ""
echo "üìä 3. ANALYSE DES SCRIPTS RACINE..."
echo "==================================="

if [ "$ROOT_SCRIPTS" -gt 0 ]; then
    echo "üîç V√©rification des scripts racine (l√©gitimes?):"
    while IFS= read -r script; do
        if [ -n "$script" ]; then
            filename=$(basename "$script")
            echo "   üìÑ $filename:"
            
            # V√©rifier si c'est un script l√©gitime
            case "$filename" in
                "setup-"*|"install"*|"build"*|"deploy"*|"start"*)
                    echo "      ‚úÖ Script l√©gitime (setup/d√©ploiement)"
                    ;;
                "test"*|"lint"*|"format"*)
                    echo "      ‚úÖ Script l√©gitime (qualit√© code)"
                    ;;
                *)
                    echo "      ‚ö†Ô∏è  Script suspect - devrait √™tre dans tools/?"
                    ((SUSPICIOUS_SCRIPTS++))
                    ;;
            esac
        fi
    done <<< "$ROOT_LIST"
else
    echo "‚úÖ Aucun script racine √† analyser"
fi

echo ""
echo "üìä 4. V√âRIFICATION STRUCTURE TOOLS/..."
echo "======================================"

# V√©rifier que tools/ a la bonne structure
EXPECTED_DIRS=("migration" "css" "firebase" "audit" "maintenance")
echo "üèóÔ∏è  V√©rification structure attendue:"

for dir in "${EXPECTED_DIRS[@]}"; do
    if [ -d "tools/$dir" ]; then
        count=$(find "tools/$dir" -name "*.sh" -type f | wc -l | tr -d ' ')
        echo "   ‚úÖ tools/$dir/ ($count scripts)"
    else
        echo "   ‚ùå tools/$dir/ manquant!"
    fi
done

echo ""
echo "üìä 5. RECHERCHE DOUBLONS/CONFLITS..."
echo "===================================="

# Chercher des noms similaires qui pourraient √™tre des doublons
echo "üîç Recherche de doublons potentiels:"
SCRIPT_NAMES=$(echo "$ALL_SCRIPTS" | xargs -n1 basename | sort)
DUPLICATES=$(echo "$SCRIPT_NAMES" | uniq -d)

if [ -n "$DUPLICATES" ]; then
    echo "‚ö†Ô∏è  Noms de scripts dupliqu√©s d√©tect√©s:"
    echo "$DUPLICATES"
else
    echo "‚úÖ Aucun doublon d√©tect√©"
fi

echo ""
echo "üìä 6. V√âRIFICATION PERMISSIONS..."
echo "================================="

echo "üîí Scripts non-ex√©cutables (probl√®me potentiel):"
NON_EXEC=$(find . -name "*.sh" -type f -not -path "./node_modules/*" -not -path "./.git/*" ! -executable)
if [ -n "$NON_EXEC" ]; then
    echo "$NON_EXEC"
    echo "   ‚ö†Ô∏è  Scripts sans permission d'ex√©cution trouv√©s"
else
    echo "‚úÖ Tous les scripts sont ex√©cutables"
fi

echo ""
echo "üìä 7. FICHIERS TEMPORAIRES/BACKUP..."
echo "===================================="

echo "üóëÔ∏è  Fichiers temporaires de scripts:"
TEMP_FILES=$(find . -name "*.sh.*" -o -name "*~" -o -name "*.bak" -o -name "*.backup*" -type f -not -path "./node_modules/*" -not -path "./.git/*")
if [ -n "$TEMP_FILES" ]; then
    echo "$TEMP_FILES"
    echo "   ‚ö†Ô∏è  Fichiers temporaires trouv√©s - nettoyage recommand√©"
else
    echo "‚úÖ Aucun fichier temporaire"
fi

echo ""
echo "üéØ R√âSUM√â FINAL DE L'AUDIT"
echo "=========================="

echo "üìä Statistiques:"
echo "   üìÑ Total scripts: $TOTAL_SCRIPTS"
echo "   üè† Scripts racine: $ROOT_SCRIPTS"
echo "   üõ†Ô∏è  Scripts tools/: $TOOLS_SCRIPTS"
echo "   üö® Scripts orphelins: $ORPHAN_SCRIPTS"
echo "   ‚ö†Ô∏è  Scripts suspects: $SUSPICIOUS_SCRIPTS"

echo ""
echo "‚úÖ √âVALUATION GLOBALE:"

# Score de qualit√©
SCORE=100
if [ "$ORPHAN_SCRIPTS" -gt 0 ]; then
    SCORE=$((SCORE - ORPHAN_SCRIPTS * 20))
    echo "   ‚ùå Scripts orphelins d√©tect√©s (-$((ORPHAN_SCRIPTS * 20)) points)"
fi

if [ "$SUSPICIOUS_SCRIPTS" -gt 0 ]; then
    SCORE=$((SCORE - SUSPICIOUS_SCRIPTS * 10))
    echo "   ‚ö†Ô∏è  Scripts suspects en racine (-$((SUSPICIOUS_SCRIPTS * 10)) points)"
fi

if [ "$TOOLS_SCRIPTS" -lt 40 ]; then
    echo "   ‚ö†Ô∏è  Peu de scripts dans tools/ (migration incompl√®te?)"
    SCORE=$((SCORE - 10))
fi

echo ""
if [ "$SCORE" -ge 90 ]; then
    echo "üéâ EXCELLENT! Score: $SCORE/100 - Nettoyage r√©ussi!"
elif [ "$SCORE" -ge 70 ]; then
    echo "üëç BON! Score: $SCORE/100 - Quelques ajustements recommand√©s"
else
    echo "‚ö†Ô∏è  PEUT MIEUX FAIRE! Score: $SCORE/100 - Nettoyage √† continuer"
fi

echo ""
echo "üéØ RECOMMANDATIONS:"
if [ "$ORPHAN_SCRIPTS" -gt 0 ]; then
    echo "   üìã D√©placer les scripts orphelins vers tools/"
fi
if [ "$SUSPICIOUS_SCRIPTS" -gt 0 ]; then
    echo "   üìã √âvaluer si les scripts racine suspects peuvent √™tre d√©plac√©s"
fi
if [ -n "$TEMP_FILES" ]; then
    echo "   üìã Nettoyer les fichiers temporaires/backup"
fi
if [ "$SCORE" -ge 90 ]; then
    echo "   üéä Nettoyage termin√© avec succ√®s - aucune action requise!"
fi

echo ""
echo "üìÖ Audit termin√© le $(date)" 