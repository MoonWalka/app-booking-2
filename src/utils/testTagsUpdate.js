/**
 * Script de test pour d√©boguer le probl√®me de mise √† jour des tags
 */

import { structuresService } from '../services/contacts/structuresService';
import { prepareDataForValidation } from './firebaseDataUtils';

export async function testTagsUpdate(structureId, newTags, userId) {
  console.log('üß™ Test de mise √† jour des tags');
  console.log('Structure ID:', structureId);
  console.log('Nouveaux tags:', newTags);
  
  try {
    // 1. R√©cup√©rer la structure actuelle
    console.log('\n1Ô∏è‚É£ R√©cup√©ration de la structure...');
    const structureResult = await structuresService.getStructure(structureId);
    
    if (!structureResult.success) {
      console.error('‚ùå Erreur r√©cup√©ration structure:', structureResult.error);
      return;
    }
    
    const currentData = structureResult.data;
    console.log('‚úÖ Structure r√©cup√©r√©e:', {
      id: currentData.id,
      raisonSociale: currentData.raisonSociale,
      tags: currentData.tags,
      periodeActivite: currentData.periodeActivite
    });
    
    // 2. Pr√©parer les donn√©es pour voir ce qui pose probl√®me
    console.log('\n2Ô∏è‚É£ Pr√©paration des donn√©es pour validation...');
    const dataForValidation = prepareDataForValidation({
      ...currentData,
      tags: newTags
    });
    
    console.log('üìã Donn√©es pr√©par√©es:', {
      tags: dataForValidation.tags,
      periodeActivite: dataForValidation.periodeActivite,
      // Afficher le type des dates si elles existent
      periodeActiviteTypes: dataForValidation.periodeActivite ? {
        dateDebut: typeof dataForValidation.periodeActivite.dateDebut,
        dateFin: typeof dataForValidation.periodeActivite.dateFin,
        dateBouclage: typeof dataForValidation.periodeActivite.dateBouclage
      } : null
    });
    
    // 3. Tenter la mise √† jour
    console.log('\n3Ô∏è‚É£ Tentative de mise √† jour...');
    const updateResult = await structuresService.updateStructure(
      structureId,
      { tags: newTags },
      userId
    );
    
    if (updateResult.success) {
      console.log('‚úÖ Mise √† jour r√©ussie');
      
      // 4. V√©rifier la structure apr√®s mise √† jour
      console.log('\n4Ô∏è‚É£ V√©rification apr√®s mise √† jour...');
      const updatedResult = await structuresService.getStructure(structureId);
      
      if (updatedResult.success) {
        console.log('‚úÖ Structure apr√®s mise √† jour:', {
          id: updatedResult.data.id,
          tags: updatedResult.data.tags,
          tagsCount: updatedResult.data.tags?.length || 0
        });
      }
    } else {
      console.error('‚ùå Erreur mise √† jour:', updateResult.error);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur dans le test:', error);
  }
}

// Fonction pour tester directement dans la console
window.testTagsUpdate = testTagsUpdate;